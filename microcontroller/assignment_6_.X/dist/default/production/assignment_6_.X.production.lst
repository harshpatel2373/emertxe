

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jan 19 10:18:16 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.41
    24                           ; Generated 25/01/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297                           
   298                           	psect	idataCOMMON
   299  01A2                     __pidataCOMMON:	
   300                           
   301                           ;initializer for read_digital_keypad@once
   302  01A2  3401               	retlw	1
   303                           
   304                           	psect	idataBANK0
   305  018C                     __pidataBANK0:	
   306                           
   307                           ;initializer for main@duty_cycle
   308  018C  340A               	retlw	10
   309  018D  3400               	retlw	0
   310  018E  3400               	retlw	0
   311  018F  3400               	retlw	0
   312                           
   313                           ;initializer for main@period
   314  0190  3464               	retlw	100
   315  0191  3400               	retlw	0
   316  0192  3400               	retlw	0
   317  0193  3400               	retlw	0
   318  0008                     _PORTD	set	8
   319  0001                     _TMR0	set	1
   320  0006                     _PORTB	set	6
   321  0040                     _RD0	set	64
   322  005F                     _GIE	set	95
   323  005D                     _TMR0IE	set	93
   324  005A                     _TMR0IF	set	90
   325  0088                     _TRISD	set	136
   326  0086                     _TRISB	set	134
   327  040B                     _PSA	set	1035
   328  040D                     _T0CS	set	1037
   329                           
   330                           ; #config settings
   331  0000                     
   332                           	psect	cinit
   333  0015                     start_initialization:	
   334  0015                     __initialization:	
   335                           
   336                           ; Initialize objects allocated to BANK0
   337  0015  1383               	bcf	3,7	;select IRP bank0
   338  0016  3038               	movlw	low (__pdataBANK0+8)
   339  0017  00FD               	movwf	btemp+-1
   340  0018  3001               	movlw	high __pidataBANK0
   341  0019  00FE               	movwf	btemp
   342  001A  308C               	movlw	low __pidataBANK0
   343  001B  00FF               	movwf	btemp+1
   344  001C  3030               	movlw	low __pdataBANK0
   345  001D  0084               	movwf	4
   346  001E  120A  118A  2165  120A  118A  	fcall	init_ram0
   347                           
   348                           ; Initialize objects allocated to COMMON
   349  0023  120A  118A  21A2  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   350  0028  00F7               	movwf	__pdataCOMMON& (0+127)
   351                           
   352                           ; Clear objects allocated to BANK0
   353  0029  3020               	movlw	low __pbssBANK0
   354  002A  0084               	movwf	4
   355  002B  3030               	movlw	low (__pbssBANK0+16)
   356  002C  120A  118A  2194   	fcall	clear_ram0
   357  002F                     end_of_initialization:	
   358                           ;End of C runtime variable initialization code
   359                           
   360  002F                     __end_of__initialization:	
   361  002F  0183               	clrf	3
   362  0030  120A  118A  2833   	ljmp	_main	;jump to C main() function
   363                           
   364                           	psect	dataCOMMON
   365  0077                     __pdataCOMMON:	
   366  0077                     read_digital_keypad@once:	
   367  0077                     	ds	1
   368                           
   369                           	psect	bssBANK0
   370  0020                     __pbssBANK0:	
   371  0020                     main@wait:	
   372  0020                     	ds	4
   373  0024                     main@loop_counter:	
   374  0024                     	ds	4
   375  0028                     isr@count2:	
   376  0028                     	ds	4
   377  002C                     isr@count1:	
   378  002C                     	ds	4
   379                           
   380                           	psect	dataBANK0
   381  0030                     __pdataBANK0:	
   382  0030                     main@duty_cycle:	
   383  0030                     	ds	4
   384  0034                     main@period:	
   385  0034                     	ds	4
   386                           
   387                           	psect	inittext
   388  0161                     init_fetch0:	
   389                           ;	Called with low address in FSR and high address in W
   390                           
   391  0161  087E               	movf	126,w
   392  0162  008A               	movwf	10
   393  0163  087F               	movf	127,w
   394  0164  0082               	movwf	2
   395  0165                     init_ram0:	
   396                           ;Called with:
   397                           ;	high address of idata address in btemp 
   398                           ;	low address of idata address in btemp+1 
   399                           ;	low address of data in FSR
   400                           ;	high address + 1 of data in btemp-1
   401                           
   402  0165  2161  120A  118A   	fcall	init_fetch0
   403  0168  0080               	movwf	0
   404  0169  0A84               	incf	4,f
   405  016A  0804               	movf	4,w
   406  016B  067D               	xorwf	125,w
   407  016C  1903               	btfsc	3,2
   408  016D  3400               	retlw	0
   409  016E  0AFF               	incf	127,f
   410  016F  1903               	btfsc	3,2
   411  0170  0AFE               	incf	126,f
   412  0171  2965               	goto	init_ram0
   413                           
   414                           	psect	clrtext
   415  0194                     clear_ram0:	
   416                           ;	Called with FSR containing the base address, and
   417                           ;	W with the last address+1
   418                           
   419  0194  0064               	clrwdt	;clear the watchdog before getting into this loop
   420  0195                     clrloop0:	
   421  0195  0180               	clrf	0	;clear RAM location pointed to by FSR
   422  0196  0A84               	incf	4,f	;increment pointer
   423  0197  0604               	xorwf	4,w	;XOR with final address
   424  0198  1903               	btfsc	3,2	;have we reached the end yet?
   425  0199  3400               	retlw	0	;all done for this memory range, return
   426  019A  0604               	xorwf	4,w	;XOR again to restore value
   427  019B  2995               	goto	clrloop0	;do the next byte
   428                           
   429                           	psect	cstackCOMMON
   430  0070                     __pcstackCOMMON:	
   431  0070                     ?_init_timer0:	
   432  0070                     ?_init_digital_keypad:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_read_digital_keypad:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_isr:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_isr:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_init_config:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_main:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 1 bytes @ 0x0
   452  0070                     	ds	4
   453  0074                     ??_init_timer0:	
   454  0074                     ??_init_digital_keypad:	
   455                           ; 1 bytes @ 0x4
   456                           
   457  0074                     ??_read_digital_keypad:	
   458                           ; 1 bytes @ 0x4
   459                           
   460  0074                     ??_init_config:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 1 bytes @ 0x4
   465  0074                     	ds	1
   466  0075                     read_digital_keypad@mode:	
   467                           
   468                           ; 1 bytes @ 0x5
   469  0075                     	ds	1
   470  0076                     main@key:	
   471                           
   472                           ; 1 bytes @ 0x6
   473  0076                     	ds	1
   474                           
   475                           	psect	cstackBANK0
   476  0038                     __pcstackBANK0:	
   477  0038                     ??_main:	
   478                           
   479                           ; 1 bytes @ 0x0
   480  0038                     	ds	4
   481                           
   482                           	psect	maintext
   483  0033                     __pmaintext:	
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 24 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  key             1    6[COMMON] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : B00/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         1       0       0       0       0
   505 ;;      Temps:          0       4       0       0       0
   506 ;;      Totals:         1       4       0       0       0
   507 ;;Total ram usage:        5 bytes
   508 ;; Hardware stack levels required when called:    3
   509 ;; This function calls:
   510 ;;		_init_config
   511 ;;		_read_digital_keypad
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _main
   519  0033                     _main:	
   520                           
   521                           ;main.c: 25: init_config();
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   525  0033  120A  118A  2172  120A  118A  	fcall	_init_config
   526  0038                     l762:	
   527                           ;main.c: 26: static unsigned long int period = 100, loop_counter = 0, wait = 0, duty_cyc
      +                          le = 10;
   528                           ;main.c: 27: unsigned char key;
   529                           ;main.c: 29: while (1)
   530                           
   531                           
   532                           ;main.c: 30: {
   533                           ;main.c: 32: if (TMR0IE == 0)
   534  0038  1A8B               	btfsc	11,5	;volatile
   535  0039  2844               	goto	l766
   536                           
   537                           ;main.c: 33: duty_cycle = 10;
   538  003A  3000               	movlw	0
   539  003B  1283               	bcf	3,5	;RP0=0, select bank0
   540  003C  1303               	bcf	3,6	;RP1=0, select bank0
   541  003D  00B3               	movwf	main@duty_cycle+3
   542  003E  3000               	movlw	0
   543  003F  00B2               	movwf	main@duty_cycle+2
   544  0040  3000               	movlw	0
   545  0041  00B1               	movwf	main@duty_cycle+1
   546  0042  300A               	movlw	10
   547  0043  00B0               	movwf	main@duty_cycle
   548  0044                     l766:	
   549                           
   550                           ;main.c: 36: key = read_digital_keypad(0);
   551  0044  3000               	movlw	0
   552  0045  120A  118A  213D  120A  118A  	fcall	_read_digital_keypad
   553  004A  1283               	bcf	3,5	;RP0=0, select bank0
   554  004B  1303               	bcf	3,6	;RP1=0, select bank0
   555  004C  00B8               	movwf	??_main
   556  004D  0838               	movf	??_main,w
   557  004E  00F6               	movwf	main@key
   558                           
   559                           ;main.c: 38: if (wait-- == 0)
   560  004F  3001               	movlw	1
   561  0050  00B8               	movwf	??_main
   562  0051  3000               	movlw	0
   563  0052  00B9               	movwf	??_main+1
   564  0053  3000               	movlw	0
   565  0054  00BA               	movwf	??_main+2
   566  0055  3000               	movlw	0
   567  0056  00BB               	movwf	??_main+3
   568  0057  0838               	movf	??_main,w
   569  0058  02A0               	subwf	main@wait,f
   570  0059  0839               	movf	??_main+1,w
   571  005A  1C03               	skipc
   572  005B  0F39               	incfsz	??_main+1,w
   573  005C  285E               	goto	u365
   574  005D  285F               	goto	u366
   575  005E                     u365:	
   576  005E  02A1               	subwf	main@wait+1,f
   577  005F                     u366:	
   578  005F  083A               	movf	??_main+2,w
   579  0060  1C03               	skipc
   580  0061  0F3A               	incfsz	??_main+2,w
   581  0062  2864               	goto	u367
   582  0063  2865               	goto	u368
   583  0064                     u367:	
   584  0064  02A2               	subwf	main@wait+2,f
   585  0065                     u368:	
   586  0065  083B               	movf	??_main+3,w
   587  0066  1C03               	skipc
   588  0067  0F3B               	incfsz	??_main+3,w
   589  0068  286A               	goto	u369
   590  0069  286B               	goto	u360
   591  006A                     u369:	
   592  006A  02A3               	subwf	main@wait+3,f
   593  006B                     u360:	
   594  006B  0A20               	incf	main@wait,w
   595  006C  1D03               	skipz
   596  006D  288C               	goto	l65
   597  006E  0A21               	incf	main@wait+1,w
   598  006F  1D03               	skipz
   599  0070  288C               	goto	l65
   600  0071  0A22               	incf	main@wait+2,w
   601  0072  1D03               	skipz
   602  0073  288C               	goto	l65
   603  0074  0A23               	incf	main@wait+3,w
   604  0075  1D03               	btfss	3,2
   605  0076  288C               	goto	l65
   606                           
   607                           ;main.c: 39: {
   608                           ;main.c: 41: wait = 1000;
   609  0077  3000               	movlw	0
   610  0078  00A3               	movwf	main@wait+3
   611  0079  3000               	movlw	0
   612  007A  00A2               	movwf	main@wait+2
   613  007B  3003               	movlw	3
   614  007C  00A1               	movwf	main@wait+1
   615  007D  30E8               	movlw	232
   616  007E  00A0               	movwf	main@wait
   617                           
   618                           ;main.c: 43: if (key == 0x3E)
   619  007F  303E               	movlw	62
   620  0080  0676               	xorwf	main@key,w
   621  0081  1D03               	btfss	3,2
   622  0082  288C               	goto	l65
   623                           
   624                           ;main.c: 44: {
   625                           ;main.c: 46: duty_cycle=100;
   626  0083  3000               	movlw	0
   627  0084  00B3               	movwf	main@duty_cycle+3
   628  0085  3000               	movlw	0
   629  0086  00B2               	movwf	main@duty_cycle+2
   630  0087  3000               	movlw	0
   631  0088  00B1               	movwf	main@duty_cycle+1
   632  0089  3064               	movlw	100
   633  008A  00B0               	movwf	main@duty_cycle
   634                           
   635                           ;main.c: 48: TMR0IE = 1;
   636  008B  168B               	bsf	11,5	;volatile
   637  008C                     l65:	
   638                           
   639                           ;main.c: 50: }
   640                           ;main.c: 52: }
   641                           ;main.c: 54: if (loop_counter < duty_cycle)
   642  008C  0833               	movf	main@duty_cycle+3,w
   643  008D  0227               	subwf	main@loop_counter+3,w
   644  008E  1D03               	skipz
   645  008F  289A               	goto	u395
   646  0090  0832               	movf	main@duty_cycle+2,w
   647  0091  0226               	subwf	main@loop_counter+2,w
   648  0092  1D03               	skipz
   649  0093  289A               	goto	u395
   650  0094  0831               	movf	main@duty_cycle+1,w
   651  0095  0225               	subwf	main@loop_counter+1,w
   652  0096  1D03               	skipz
   653  0097  289A               	goto	u395
   654  0098  0830               	movf	main@duty_cycle,w
   655  0099  0224               	subwf	main@loop_counter,w
   656  009A                     u395:	
   657  009A  1803               	skipnc
   658  009B  289E               	goto	l780
   659                           
   660                           ;main.c: 55: {
   661                           ;main.c: 56: RD0 = 1;
   662  009C  1408               	bsf	8,0	;volatile
   663                           
   664                           ;main.c: 57: }
   665  009D  28AE               	goto	l784
   666  009E                     l780:	
   667                           
   668                           ;main.c: 58: else if (loop_counter > duty_cycle)
   669  009E  0827               	movf	main@loop_counter+3,w
   670  009F  0233               	subwf	main@duty_cycle+3,w
   671  00A0  1D03               	skipz
   672  00A1  28AC               	goto	u405
   673  00A2  0826               	movf	main@loop_counter+2,w
   674  00A3  0232               	subwf	main@duty_cycle+2,w
   675  00A4  1D03               	skipz
   676  00A5  28AC               	goto	u405
   677  00A6  0825               	movf	main@loop_counter+1,w
   678  00A7  0231               	subwf	main@duty_cycle+1,w
   679  00A8  1D03               	skipz
   680  00A9  28AC               	goto	u405
   681  00AA  0824               	movf	main@loop_counter,w
   682  00AB  0230               	subwf	main@duty_cycle,w
   683  00AC                     u405:	
   684  00AC  1C03               	btfss	3,0
   685                           
   686                           ;main.c: 59: {
   687                           ;main.c: 60: RD0 = 0;
   688  00AD  1008               	bcf	8,0	;volatile
   689  00AE                     l784:	
   690                           
   691                           ;main.c: 61: }
   692                           ;main.c: 62: if(loop_counter++ == period)
   693  00AE  3001               	movlw	1
   694  00AF  07A4               	addwf	main@loop_counter,f
   695  00B0  3000               	movlw	0
   696  00B1  1803               	skipnc
   697  00B2  3001               	movlw	1
   698  00B3  07A5               	addwf	main@loop_counter+1,f
   699  00B4  3000               	movlw	0
   700  00B5  1803               	skipnc
   701  00B6  3001               	movlw	1
   702  00B7  07A6               	addwf	main@loop_counter+2,f
   703  00B8  3000               	movlw	0
   704  00B9  1803               	skipnc
   705  00BA  3001               	movlw	1
   706  00BB  07A7               	addwf	main@loop_counter+3,f
   707  00BC  3001               	movlw	1
   708  00BD  00B8               	movwf	??_main
   709  00BE  3000               	movlw	0
   710  00BF  00B9               	movwf	??_main+1
   711  00C0  3000               	movlw	0
   712  00C1  00BA               	movwf	??_main+2
   713  00C2  3000               	movlw	0
   714  00C3  00BB               	movwf	??_main+3
   715  00C4  0834               	movf	main@period,w
   716  00C5  07B8               	addwf	??_main,f
   717  00C6  0835               	movf	main@period+1,w
   718  00C7  1803               	skipnc
   719  00C8  0F35               	incfsz	main@period+1,w
   720  00C9  28CB               	goto	u410
   721  00CA  28CC               	goto	u411
   722  00CB                     u410:	
   723  00CB  07B9               	addwf	??_main+1,f
   724  00CC                     u411:	
   725  00CC  0836               	movf	main@period+2,w
   726  00CD  1803               	skipnc
   727  00CE  0F36               	incfsz	main@period+2,w
   728  00CF  28D1               	goto	u412
   729  00D0  28D2               	goto	u413
   730  00D1                     u412:	
   731  00D1  07BA               	addwf	??_main+2,f
   732  00D2                     u413:	
   733  00D2  0837               	movf	main@period+3,w
   734  00D3  1803               	skipnc
   735  00D4  0A37               	incf	main@period+3,w
   736  00D5  07BB               	addwf	??_main+3,f
   737  00D6  0827               	movf	main@loop_counter+3,w
   738  00D7  063B               	xorwf	??_main+3,w
   739  00D8  1D03               	skipz
   740  00D9  28E4               	goto	u425
   741  00DA  0826               	movf	main@loop_counter+2,w
   742  00DB  063A               	xorwf	??_main+2,w
   743  00DC  1D03               	skipz
   744  00DD  28E4               	goto	u425
   745  00DE  0825               	movf	main@loop_counter+1,w
   746  00DF  0639               	xorwf	??_main+1,w
   747  00E0  1D03               	skipz
   748  00E1  28E4               	goto	u425
   749  00E2  0824               	movf	main@loop_counter,w
   750  00E3  0638               	xorwf	??_main,w
   751  00E4                     u425:	
   752  00E4  1D03               	skipz
   753  00E5  2838               	goto	l762
   754                           
   755                           ;main.c: 63: {
   756                           ;main.c: 64: loop_counter = 0;
   757  00E6  3000               	movlw	0
   758  00E7  00A7               	movwf	main@loop_counter+3
   759  00E8  3000               	movlw	0
   760  00E9  00A6               	movwf	main@loop_counter+2
   761  00EA  3000               	movlw	0
   762  00EB  00A5               	movwf	main@loop_counter+1
   763  00EC  3000               	movlw	0
   764  00ED  00A4               	movwf	main@loop_counter
   765  00EE  2838               	goto	l762
   766  00EF                     __end_of_main:	
   767                           
   768                           	psect	text1
   769  013D                     __ptext1:	
   770 ;; *************** function _read_digital_keypad *****************
   771 ;; Defined at:
   772 ;;		line 10 in file "digital_keypad.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  mode            1    wreg     unsigned char 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  mode            1    5[COMMON] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      unsigned char 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         1       0       0       0       0
   788 ;;      Temps:          1       0       0       0       0
   789 ;;      Totals:         2       0       0       0       0
   790 ;;Total ram usage:        2 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _read_digital_keypad
   802  013D                     _read_digital_keypad:	
   803                           
   804                           ;incstack = 0
   805                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
   806                           ;read_digital_keypad@mode stored from wreg
   807  013D  00F5               	movwf	read_digital_keypad@mode
   808                           
   809                           ;digital_keypad.c: 12: static unsigned char once = 1;
   810                           ;digital_keypad.c: 14: if (mode == 0)
   811  013E  0875               	movf	read_digital_keypad@mode,w
   812  013F  1D03               	btfss	3,2
   813  0140  2946               	goto	l732
   814                           
   815                           ;digital_keypad.c: 15: {
   816                           ;digital_keypad.c: 16: return PORTB & 0x3F;
   817  0141  1283               	bcf	3,5	;RP0=0, select bank0
   818  0142  1303               	bcf	3,6	;RP1=0, select bank0
   819  0143  0806               	movf	6,w	;volatile
   820  0144  393F               	andlw	63
   821  0145  0008               	return
   822  0146                     l732:	
   823                           ;digital_keypad.c: 17: }
   824                           
   825                           
   826                           ;digital_keypad.c: 18: else
   827                           ;digital_keypad.c: 19: {
   828                           ;digital_keypad.c: 20: if (((PORTB & 0x3F) != 0x3F) && once)
   829  0146  303F               	movlw	63
   830  0147  1283               	bcf	3,5	;RP0=0, select bank0
   831  0148  1303               	bcf	3,6	;RP1=0, select bank0
   832  0149  0506               	andwf	6,w	;volatile
   833  014A  00F4               	movwf	??_read_digital_keypad
   834  014B  303F               	movlw	63
   835  014C  0674               	xorwf	??_read_digital_keypad,w
   836  014D  1903               	btfsc	3,2
   837  014E  2956               	goto	l744
   838  014F  0877               	movf	read_digital_keypad@once,w
   839  0150  1903               	btfsc	3,2
   840  0151  2956               	goto	l744
   841                           
   842                           ;digital_keypad.c: 21: {
   843                           ;digital_keypad.c: 22: once = 0;
   844  0152  01F7               	clrf	read_digital_keypad@once
   845                           
   846                           ;digital_keypad.c: 24: return PORTB & 0x3F;
   847  0153  0806               	movf	6,w	;volatile
   848  0154  393F               	andlw	63
   849  0155  0008               	return
   850  0156                     l744:	
   851                           ;digital_keypad.c: 25: }
   852                           
   853                           
   854                           ;digital_keypad.c: 26: else if ((PORTB & 0x3F) == 0x3F)
   855  0156  303F               	movlw	63
   856  0157  0506               	andwf	6,w	;volatile
   857  0158  00F4               	movwf	??_read_digital_keypad
   858  0159  303F               	movlw	63
   859  015A  0674               	xorwf	??_read_digital_keypad,w
   860  015B  1D03               	btfss	3,2
   861  015C  295F               	goto	l748
   862                           
   863                           ;digital_keypad.c: 27: {
   864                           ;digital_keypad.c: 28: once = 1;
   865  015D  01F7               	clrf	read_digital_keypad@once
   866  015E  0AF7               	incf	read_digital_keypad@once,f
   867  015F                     l748:	
   868                           
   869                           ;digital_keypad.c: 29: }
   870                           ;digital_keypad.c: 30: }
   871                           ;digital_keypad.c: 32: return 0x3F;
   872  015F  303F               	movlw	63
   873  0160  0008               	return
   874  0161                     __end_of_read_digital_keypad:	
   875                           
   876                           	psect	text2
   877  0172                     __ptext2:	
   878 ;; *************** function _init_config *****************
   879 ;; Defined at:
   880 ;;		line 13 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		_init_digital_keypad
   903 ;;		_init_timer0
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _init_config
   911  0172                     _init_config:	
   912                           
   913                           ;main.c: 14: TRISD = 0;
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   917  0172  1683               	bsf	3,5	;RP0=1, select bank1
   918  0173  1303               	bcf	3,6	;RP1=0, select bank1
   919  0174  0188               	clrf	8	;volatile
   920                           
   921                           ;main.c: 15: PORTD = 0;
   922  0175  1283               	bcf	3,5	;RP0=0, select bank0
   923  0176  1303               	bcf	3,6	;RP1=0, select bank0
   924  0177  0188               	clrf	8	;volatile
   925                           
   926                           ;main.c: 16: init_digital_keypad();
   927  0178  120A  118A  219C  120A  118A  	fcall	_init_digital_keypad
   928                           
   929                           ;main.c: 17: init_timer0();
   930  017D  120A  118A  2182   	fcall	_init_timer0
   931                           
   932                           ;main.c: 19: GIE = 1;
   933  0180  178B               	bsf	11,7	;volatile
   934  0181  0008               	return
   935  0182                     __end_of_init_config:	
   936                           
   937                           	psect	text3
   938  0182                     __ptext3:	
   939 ;; *************** function _init_timer0 *****************
   940 ;; Defined at:
   941 ;;		line 3 in file "timers.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_init_config
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _init_timer0
   971  0182                     _init_timer0:	
   972                           
   973                           ;timers.c: 6: T0CS = 0;
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _init_timer0: [wreg]
   977  0182  1683               	bsf	3,5	;RP0=1, select bank1
   978  0183  1303               	bcf	3,6	;RP1=0, select bank1
   979  0184  1281               	bcf	1,5	;volatile
   980                           
   981                           ;timers.c: 9: PSA = 1;
   982  0185  1581               	bsf	1,3	;volatile
   983                           
   984                           ;timers.c: 11: TMR0 = 6;
   985  0186  3006               	movlw	6
   986  0187  1283               	bcf	3,5	;RP0=0, select bank0
   987  0188  1303               	bcf	3,6	;RP1=0, select bank0
   988  0189  0081               	movwf	1	;volatile
   989                           
   990                           ;timers.c: 14: TMR0IE = 1;
   991  018A  168B               	bsf	11,5	;volatile
   992  018B  0008               	return
   993  018C                     __end_of_init_timer0:	
   994                           
   995                           	psect	text4
   996  019C                     __ptext4:	
   997 ;; *************** function _init_digital_keypad *****************
   998 ;; Defined at:
   999 ;;		line 4 in file "digital_keypad.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_init_config
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _init_digital_keypad
  1029  019C                     _init_digital_keypad:	
  1030                           
  1031                           ;digital_keypad.c: 7: TRISB = TRISB | 0x3F;
  1032                           
  1033                           ;incstack = 0
  1034                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1035  019C  1683               	bsf	3,5	;RP0=1, select bank1
  1036  019D  1303               	bcf	3,6	;RP1=0, select bank1
  1037  019E  0806               	movf	6,w	;volatile
  1038  019F  383F               	iorlw	63
  1039  01A0  0086               	movwf	6	;volatile
  1040  01A1  0008               	return
  1041  01A2                     __end_of_init_digital_keypad:	
  1042                           
  1043                           	psect	text5
  1044  00EF                     __ptext5:	
  1045 ;; *************** function _isr *****************
  1046 ;; Defined at:
  1047 ;;		line 4 in file "isr.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          4       0       0       0       0
  1064 ;;      Totals:         4       0       0       0       0
  1065 ;;Total ram usage:        4 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		Interrupt level 1
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _isr
  1076  00EF                     _isr:	
  1077                           
  1078                           ;isr.c: 6: static unsigned long int count1 = 0, count2 = 0;
  1079                           ;isr.c: 8: if (TMR0IF == 1)
  1080  00EF  1D0B               	btfss	11,2	;volatile
  1081  00F0  2932               	goto	i1l33
  1082                           
  1083                           ;isr.c: 9: {
  1084                           ;isr.c: 10: TMR0 = TMR0 + 6 + 2;
  1085  00F1  0801               	movf	1,w	;volatile
  1086  00F2  3E08               	addlw	8
  1087  00F3  0081               	movwf	1	;volatile
  1088                           
  1089                           ;isr.c: 11: if (++count1 == 20000)
  1090  00F4  3001               	movlw	1
  1091  00F5  07AC               	addwf	isr@count1,f
  1092  00F6  3000               	movlw	0
  1093  00F7  1803               	skipnc
  1094  00F8  3001               	movlw	1
  1095  00F9  07AD               	addwf	isr@count1+1,f
  1096  00FA  3000               	movlw	0
  1097  00FB  1803               	skipnc
  1098  00FC  3001               	movlw	1
  1099  00FD  07AE               	addwf	isr@count1+2,f
  1100  00FE  3000               	movlw	0
  1101  00FF  1803               	skipnc
  1102  0100  3001               	movlw	1
  1103  0101  07AF               	addwf	isr@count1+3,f
  1104  0102  3020               	movlw	32
  1105  0103  062C               	xorwf	isr@count1,w
  1106  0104  304E               	movlw	78
  1107  0105  1903               	skipnz
  1108  0106  062D               	xorwf	isr@count1+1,w
  1109  0107  042E               	iorwf	isr@count1+2,w
  1110  0108  042F               	iorwf	isr@count1+3,w
  1111  0109  1D03               	btfss	3,2
  1112  010A  2931               	goto	i1l686
  1113                           
  1114                           ;isr.c: 12: {
  1115                           ;isr.c: 13: count1 = 0;
  1116  010B  3000               	movlw	0
  1117  010C  00AF               	movwf	isr@count1+3
  1118  010D  3000               	movlw	0
  1119  010E  00AE               	movwf	isr@count1+2
  1120  010F  3000               	movlw	0
  1121  0110  00AD               	movwf	isr@count1+1
  1122  0111  3000               	movlw	0
  1123  0112  00AC               	movwf	isr@count1
  1124                           
  1125                           ;isr.c: 14: if(++count2 == 5)
  1126  0113  3001               	movlw	1
  1127  0114  07A8               	addwf	isr@count2,f
  1128  0115  3000               	movlw	0
  1129  0116  1803               	skipnc
  1130  0117  3001               	movlw	1
  1131  0118  07A9               	addwf	isr@count2+1,f
  1132  0119  3000               	movlw	0
  1133  011A  1803               	skipnc
  1134  011B  3001               	movlw	1
  1135  011C  07AA               	addwf	isr@count2+2,f
  1136  011D  3000               	movlw	0
  1137  011E  1803               	skipnc
  1138  011F  3001               	movlw	1
  1139  0120  07AB               	addwf	isr@count2+3,f
  1140  0121  3005               	movlw	5
  1141  0122  0628               	xorwf	isr@count2,w
  1142  0123  0429               	iorwf	isr@count2+1,w
  1143  0124  042A               	iorwf	isr@count2+2,w
  1144  0125  042B               	iorwf	isr@count2+3,w
  1145  0126  1D03               	btfss	3,2
  1146  0127  2931               	goto	i1l686
  1147                           
  1148                           ;isr.c: 15: {
  1149                           ;isr.c: 16: count2 = 0;
  1150  0128  3000               	movlw	0
  1151  0129  00AB               	movwf	isr@count2+3
  1152  012A  3000               	movlw	0
  1153  012B  00AA               	movwf	isr@count2+2
  1154  012C  3000               	movlw	0
  1155  012D  00A9               	movwf	isr@count2+1
  1156  012E  3000               	movlw	0
  1157  012F  00A8               	movwf	isr@count2
  1158                           
  1159                           ;isr.c: 17: TMR0IE = 0;
  1160  0130  128B               	bcf	11,5	;volatile
  1161  0131                     i1l686:	
  1162                           
  1163                           ;isr.c: 18: }
  1164                           ;isr.c: 20: }
  1165                           ;isr.c: 21: TMR0IF = 0;
  1166  0131  110B               	bcf	11,2	;volatile
  1167  0132                     i1l33:	
  1168  0132  0873               	movf	??_isr+3,w
  1169  0133  00FF               	movwf	127
  1170  0134  0872               	movf	??_isr+2,w
  1171  0135  008A               	movwf	10
  1172  0136  0871               	movf	??_isr+1,w
  1173  0137  0084               	movwf	4
  1174  0138  0E70               	swapf	??_isr^(0+-128),w
  1175  0139  0083               	movwf	3
  1176  013A  0EFE               	swapf	126,f
  1177  013B  0E7E               	swapf	126,w
  1178  013C  0009               	retfie
  1179  013D                     __end_of_isr:	
  1180  007E                     btemp	set	126	;btemp
  1181  007E                     wtemp0	set	126
  1182                           
  1183                           	psect	intentry
  1184  0004                     __pintentry:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _isr: [wreg+status,2+status,0]
  1187                           
  1188  0004                     interrupt_function:	
  1189  007E                     saved_w	set	btemp
  1190  0004  00FE               	movwf	btemp
  1191  0005  0E03               	swapf	3,w
  1192  0006  00F0               	movwf	??_isr
  1193  0007  0804               	movf	4,w
  1194  0008  00F1               	movwf	??_isr+1
  1195  0009  080A               	movf	10,w
  1196  000A  00F2               	movwf	??_isr+2
  1197  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1198  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1199  000D  087F               	movf	btemp+1,w
  1200  000E  00F3               	movwf	??_isr+3
  1201  000F  120A  118A  28EF   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      4      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_digital_keypad

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      65
                                              6 COMMON     1     1      0
                                              0 BANK0      4     4      0
                        _init_config
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_digital_keypad
     _init_timer0
   _read_digital_keypad

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jan 19 10:18:16 2022

                           pc 0002                            l65 008C                            fsr 0004  
                         l732 0146                           l744 0156                           l762 0038  
                         l748 015F                           l780 009E                           l766 0044  
                         l784 00AE                           _GIE 005F                           _RD0 0040  
                         u410 00CB                           u411 00CC                           u412 00D1  
                         u413 00D2                           u405 00AC                           u360 006B  
                         u425 00E4                           u365 005E                           u366 005F  
                         u367 0064                           u368 0065                           u369 006A  
                         u395 009A                           _PSA 040B                           _isr 00EF  
                         fsr0 0004                           indf 0000         ??_read_digital_keypad 0074  
                        ?_isr 0070                          _T0CS 040D                          i1l33 0132  
                        _TMR0 0001                          _main 0033                          btemp 007E  
                        start 0012                         ??_isr 0070                         ?_main 0070  
               __CFG_WDTE$OFF 0000                  ?_init_config 0070                         i1l686 0131  
                       _PORTB 0006                         _PORTD 0008                         _TRISB 0086  
                       _TRISD 0088                  ?_init_timer0 0070                         pclath 000A  
                       status 0003                         wtemp0 007E               __initialization 0015  
                __end_of_main 00EF                        ??_main 0038                        _TMR0IE 005D  
                      _TMR0IF 005A   __end_of_init_digital_keypad 01A2                  __pdataCOMMON 0077  
                      saved_w 007E       __end_of__initialization 002F                __pcstackCOMMON 0070  
                __pidataBANK0 018C          __size_of_init_config 0010          __size_of_init_timer0 000A  
                  __pbssBANK0 0020                    __pmaintext 0033                    __pintentry 0004  
 __end_of_read_digital_keypad 0161                main@duty_cycle 0030                       __ptext1 013D  
                     __ptext2 0172                       __ptext3 0182                       __ptext4 019C  
                     __ptext5 00EF                  __size_of_isr 004E                       main@key 0076  
                     clrloop0 0195          end_of_initialization 002F                    main@period 0034  
__size_of_init_digital_keypad 0006                 __pidataCOMMON 01A2           start_initialization 0015  
                 __end_of_isr 013D                    init_fetch0 0161                   __pdataBANK0 0030  
               ??_init_config 0074                 ??_init_timer0 0074                     ___latbits 0002  
               __pcstackBANK0 0038              main@loop_counter 0024           __end_of_init_config 0182  
__size_of_read_digital_keypad 0024           __end_of_init_timer0 018C             interrupt_function 0004  
                   clear_ram0 0194           _init_digital_keypad 019C                     isr@count1 002C  
                   isr@count2 0028          ?_init_digital_keypad 0070                   _init_config 0172  
                 _init_timer0 0182                 __size_of_main 00BC       read_digital_keypad@mode 0075  
     read_digital_keypad@once 0077         ??_init_digital_keypad 0074                      main@wait 0020  
                    init_ram0 0165                      intlevel1 0000           _read_digital_keypad 013D  
        ?_read_digital_keypad 0070  
