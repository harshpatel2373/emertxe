

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jan 24 15:26:28 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.41
    31                           ; Generated 25/01/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0088                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364                           
   365                           	psect	idataBANK0
   366  04C1                     __pidataBANK0:	
   367                           
   368                           ;initializer for main@arr
   369  04C1  3400               	retlw	0
   370  04C2  3401               	retlw	1
   371  04C3  3400               	retlw	0
   372  04C4  3401               	retlw	1
   373  04C5  3400               	retlw	0
   374  04C6  3401               	retlw	1
   375  04C7  3400               	retlw	0
   376  04C8  3401               	retlw	1
   377                           
   378                           ;initializer for main@F1130
   379  04C9  3431               	retlw	49
   380  04CA  3400               	retlw	0
   381                           
   382                           ;initializer for main@once
   383  04CB  3401               	retlw	1
   384  04CC  3400               	retlw	0
   385                           
   386                           ;initializer for read_matrix_keypad@once
   387  04CD  3401               	retlw	1
   388  0001                     _TMR0	set	1
   389  0006                     _PORTB	set	6
   390  0008                     _PORTD	set	8
   391  005A                     _TMR0IF	set	90
   392  0032                     _RB2	set	50
   393  0031                     _RB1	set	49
   394  0030                     _RB0	set	48
   395  0040                     _RD0	set	64
   396  0041                     _RD1	set	65
   397  0042                     _RD2	set	66
   398  0043                     _RD3	set	67
   399  0037                     _RB7	set	55
   400  005D                     _TMR0IE	set	93
   401  005F                     _GIE	set	95
   402  0049                     _RE1	set	73
   403  004A                     _RE2	set	74
   404  0086                     _TRISB	set	134
   405  0088                     _TRISD	set	136
   406  040B                     _PSA	set	1035
   407  040D                     _T0CS	set	1037
   408  040F                     _nRBPU	set	1039
   409  0437                     _TRISB7	set	1079
   410  0449                     _TRISE1	set	1097
   411  044A                     _TRISE2	set	1098
   412                           
   413                           	psect	strings
   414  0322                     __pstrings:	
   415  0322                     stringtab:	
   416  0322                     __stringtab:	
   417                           
   418                           ;	String table - string pointers are 1 byte each
   419  0322  1BFF               	btfsc	btemp+1,7
   420  0323  2B2C               	ljmp	stringcode
   421  0324  1383               	bcf	3,7
   422  0325  187F               	btfsc	btemp+1,0
   423  0326  1783               	bsf	3,7
   424  0327  0800               	movf	0,w
   425  0328  0A84               	incf	4,f
   426  0329  1903               	skipnz
   427  032A  0AFF               	incf	btemp+1,f
   428  032B  0008               	return
   429  032C                     stringcode:	
   430  032C                     stringdir:	
   431  032C  3003               	movlw	high stringdir
   432  032D  008A               	movwf	10
   433  032E  0804               	movf	4,w
   434  032F  0A84               	incf	4,f
   435  0330  0782               	addwf	2,f
   436  0331                     __stringbase:	
   437  0331  3400               	retlw	0
   438  0332                     __end_of__stringtab:	
   439  0332                     STR_2:	
   440  0332  3463               	retlw	99	;'c'
   441  0333  3472               	retlw	114	;'r'
   442  0334  3461               	retlw	97	;'a'
   443  0335  3463               	retlw	99	;'c'
   444  0336  346B               	retlw	107	;'k'
   445  0337  3465               	retlw	101	;'e'
   446  0338  3464               	retlw	100	;'d'
   447  0339  3420               	retlw	32	;' '
   448  033A  3474               	retlw	116	;'t'
   449  033B  3468               	retlw	104	;'h'
   450  033C  3465               	retlw	101	;'e'
   451  033D  3420               	retlw	32	;' '
   452  033E  3463               	retlw	99	;'c'
   453  033F  346F               	retlw	111	;'o'
   454  0340  3464               	retlw	100	;'d'
   455  0341  3465               	retlw	101	;'e'
   456  0342  3400               	retlw	0
   457  0343                     STR_6:	
   458  0343  3445               	retlw	69	;'E'
   459  0344  346E               	retlw	110	;'n'
   460  0345  3474               	retlw	116	;'t'
   461  0346  3465               	retlw	101	;'e'
   462  0347  3472               	retlw	114	;'r'
   463  0348  3420               	retlw	32	;' '
   464  0349  3450               	retlw	80	;'P'
   465  034A  3461               	retlw	97	;'a'
   466  034B  3473               	retlw	115	;'s'
   467  034C  3473               	retlw	115	;'s'
   468  034D  3477               	retlw	119	;'w'
   469  034E  346F               	retlw	111	;'o'
   470  034F  3472               	retlw	114	;'r'
   471  0350  3464               	retlw	100	;'d'
   472  0351  3400               	retlw	0
   473  0352                     STR_1:	
   474  0352  3465               	retlw	101	;'e'
   475  0353  3478               	retlw	120	;'x'
   476  0354  3463               	retlw	99	;'c'
   477  0355  3465               	retlw	101	;'e'
   478  0356  346C               	retlw	108	;'l'
   479  0357  346C               	retlw	108	;'l'
   480  0358  3465               	retlw	101	;'e'
   481  0359  346E               	retlw	110	;'n'
   482  035A  3474               	retlw	116	;'t'
   483  035B  3420               	retlw	32	;' '
   484  035C  3479               	retlw	121	;'y'
   485  035D  346F               	retlw	111	;'o'
   486  035E  3475               	retlw	117	;'u'
   487  035F  3400               	retlw	0
   488  0360                     STR_5:	
   489  0360  3462               	retlw	98	;'b'
   490  0361  346C               	retlw	108	;'l'
   491  0362  346F               	retlw	111	;'o'
   492  0363  3463               	retlw	99	;'c'
   493  0364  346B               	retlw	107	;'k'
   494  0365  3465               	retlw	101	;'e'
   495  0366  3464               	retlw	100	;'d'
   496  0367  3400               	retlw	0
   497  0368                     STR_4:	
   498  0368  3479               	retlw	121	;'y'
   499  0369  346F               	retlw	111	;'o'
   500  036A  3475               	retlw	117	;'u'
   501  036B  3420               	retlw	32	;' '
   502  036C  3461               	retlw	97	;'a'
   503  036D  3472               	retlw	114	;'r'
   504  036E  3465               	retlw	101	;'e'
   505  036F  3400               	retlw	0
   506  0370                     STR_3:	
   507  0370  3461               	retlw	97	;'a'
   508  0371  3474               	retlw	116	;'t'
   509  0372  3474               	retlw	116	;'t'
   510  0373  3465               	retlw	101	;'e'
   511  0374  346D               	retlw	109	;'m'
   512  0375  3470               	retlw	112	;'p'
   513  0376  3474               	retlw	116	;'t'
   514  0377  3400               	retlw	0
   515                           
   516                           ; #config settings
   517  0000                     
   518                           	psect	cinit
   519  0015                     start_initialization:	
   520  0015                     __initialization:	
   521                           
   522                           ; Initialize objects allocated to BANK0
   523  0015  1383               	bcf	3,7	;select IRP bank0
   524  0016  3051               	movlw	low (__pdataBANK0+13)
   525  0017  00FD               	movwf	btemp+-1
   526  0018  3004               	movlw	high __pidataBANK0
   527  0019  00FE               	movwf	btemp
   528  001A  30C1               	movlw	low __pidataBANK0
   529  001B  00FF               	movwf	btemp+1
   530  001C  3044               	movlw	low __pdataBANK0
   531  001D  0084               	movwf	4
   532  001E  120A  118A  24A4  120A  118A  	fcall	init_ram0
   533                           
   534                           ; Clear objects allocated to BANK0
   535  0023  3020               	movlw	low __pbssBANK0
   536  0024  0084               	movwf	4
   537  0025  3034               	movlw	low (__pbssBANK0+20)
   538  0026  120A  118A  24E0   	fcall	clear_ram0
   539  0029                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  0029                     __end_of__initialization:	
   543  0029  0183               	clrf	3
   544  002A  120A  118A  282D   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssBANK0
   547  0020                     __pbssBANK0:	
   548  0020                     main@pwd:	
   549  0020                     	ds	8
   550  0028                     isr@count:	
   551  0028                     	ds	2
   552  002A                     main@attempt:	
   553  002A                     	ds	2
   554  002C                     main@count1:	
   555  002C                     	ds	2
   556  002E                     main@count:	
   557  002E                     	ds	2
   558  0030                     main@flag1:	
   559  0030                     	ds	2
   560  0032                     _sigma:	
   561  0032                     	ds	2
   562                           
   563                           	psect	dataBANK0
   564  0044                     __pdataBANK0:	
   565  0044                     main@arr:	
   566  0044                     	ds	8
   567  004C                     main@F1130:	
   568  004C                     	ds	2
   569  004E                     main@once:	
   570  004E                     	ds	2
   571  0050                     read_matrix_keypad@once:	
   572  0050                     	ds	1
   573                           
   574                           	psect	inittext
   575  04A0                     init_fetch0:	
   576                           ;	Called with low address in FSR and high address in W
   577                           
   578  04A0  087E               	movf	126,w
   579  04A1  008A               	movwf	10
   580  04A2  087F               	movf	127,w
   581  04A3  0082               	movwf	2
   582  04A4                     init_ram0:	
   583                           ;Called with:
   584                           ;	high address of idata address in btemp 
   585                           ;	low address of idata address in btemp+1 
   586                           ;	low address of data in FSR
   587                           ;	high address + 1 of data in btemp-1
   588                           
   589  04A4  24A0  120A  118A   	fcall	init_fetch0
   590  04A7  0080               	movwf	0
   591  04A8  0A84               	incf	4,f
   592  04A9  0804               	movf	4,w
   593  04AA  067D               	xorwf	125,w
   594  04AB  1903               	btfsc	3,2
   595  04AC  3400               	retlw	0
   596  04AD  0AFF               	incf	127,f
   597  04AE  1903               	btfsc	3,2
   598  04AF  0AFE               	incf	126,f
   599  04B0  2CA4               	goto	init_ram0
   600                           
   601                           	psect	clrtext
   602  04E0                     clear_ram0:	
   603                           ;	Called with FSR containing the base address, and
   604                           ;	W with the last address+1
   605                           
   606  04E0  0064               	clrwdt	;clear the watchdog before getting into this loop
   607  04E1                     clrloop0:	
   608  04E1  0180               	clrf	0	;clear RAM location pointed to by FSR
   609  04E2  0A84               	incf	4,f	;increment pointer
   610  04E3  0604               	xorwf	4,w	;XOR with final address
   611  04E4  1903               	btfsc	3,2	;have we reached the end yet?
   612  04E5  3400               	retlw	0	;all done for this memory range, return
   613  04E6  0604               	xorwf	4,w	;XOR again to restore value
   614  04E7  2CE1               	goto	clrloop0	;do the next byte
   615                           
   616                           	psect	cstackCOMMON
   617  0070                     __pcstackCOMMON:	
   618  0070                     ?_init_matrix_keypad:	
   619  0070                     ?_init_timer0:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_read_matrix_keypad:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_init_display_controller:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_init_clcd:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_init_config:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_main:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_scan_keypad:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?___awdiv:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ___awdiv@divisor:	
   647                           ; 2 bytes @ 0x0
   648                           
   649                           
   650                           ; 2 bytes @ 0x0
   651  0070                     	ds	2
   652  0072                     ___awdiv@dividend:	
   653                           
   654                           ; 2 bytes @ 0x2
   655  0072                     	ds	2
   656  0074                     ??___awdiv:	
   657                           
   658                           ; 1 bytes @ 0x4
   659  0074                     	ds	1
   660  0075                     ___awdiv@counter:	
   661                           
   662                           ; 1 bytes @ 0x5
   663  0075                     	ds	1
   664  0076                     ___awdiv@sign:	
   665                           
   666                           ; 1 bytes @ 0x6
   667  0076                     	ds	1
   668  0077                     ___awdiv@quotient:	
   669                           
   670                           ; 2 bytes @ 0x7
   671  0077                     	ds	2
   672  0079                     ??_isr:	
   673                           
   674                           ; 1 bytes @ 0x9
   675  0079                     	ds	4
   676                           
   677                           	psect	cstackBANK0
   678  0034                     __pcstackBANK0:	
   679  0034                     ??_init_matrix_keypad:	
   680  0034                     ??_init_timer0:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0034                     ?_clcd_write:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0034                     ?main@clcd_write:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0034                     ??_scan_keypad:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0034                     clcd_write@mode:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0034                     main@clcd_write@mode:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0034                     scan_keypad@i:	
   699                           ; 1 bytes @ 0x0
   700                           
   701                           
   702                           ; 2 bytes @ 0x0
   703  0034                     	ds	1
   704  0035                     ??_clcd_write:	
   705  0035                     ??main@clcd_write:	
   706                           ; 1 bytes @ 0x1
   707                           
   708                           
   709                           ; 1 bytes @ 0x1
   710  0035                     	ds	1
   711  0036                     ??_read_matrix_keypad:	
   712                           
   713                           ; 1 bytes @ 0x2
   714  0036                     	ds	1
   715  0037                     clcd_write@byte:	
   716  0037                     main@clcd_write@byte:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0037                     read_matrix_keypad@mode:	
   720                           ; 1 bytes @ 0x3
   721                           
   722                           
   723                           ; 1 bytes @ 0x3
   724  0037                     	ds	1
   725  0038                     ??_init_display_controller:	
   726  0038                     ?_clcd_putch:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0038                     ?_clcd_print:	
   730                           ; 1 bytes @ 0x4
   731                           
   732  0038                     clcd_putch@addr:	
   733                           ; 1 bytes @ 0x4
   734                           
   735  0038                     read_matrix_keypad@key:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0038                     clcd_print@str:	
   739                           ; 1 bytes @ 0x4
   740                           
   741                           
   742                           ; 2 bytes @ 0x4
   743  0038                     	ds	1
   744  0039                     ??_clcd_putch:	
   745  0039                     clcd_putch@data:	
   746                           ; 1 bytes @ 0x5
   747                           
   748                           
   749                           ; 1 bytes @ 0x5
   750  0039                     	ds	1
   751  003A                     ??_init_clcd:	
   752  003A                     ??_init_config:	
   753                           ; 1 bytes @ 0x6
   754                           
   755  003A                     clcd_print@addr:	
   756                           ; 1 bytes @ 0x6
   757                           
   758                           
   759                           ; 1 bytes @ 0x6
   760  003A                     	ds	1
   761  003B                     ??_clcd_print:	
   762  003B                     ??_main:	
   763                           ; 1 bytes @ 0x7
   764                           
   765                           
   766                           ; 1 bytes @ 0x7
   767  003B                     	ds	1
   768  003C                     main@cur_key:	
   769                           
   770                           ; 1 bytes @ 0x8
   771  003C                     	ds	1
   772  003D                     main@ptr:	
   773                           
   774                           ; 2 bytes @ 0x9
   775  003D                     	ds	2
   776  003F                     main@i:	
   777                           
   778                           ; 4 bytes @ 0xB
   779  003F                     	ds	4
   780  0043                     main@key:	
   781                           
   782                           ; 1 bytes @ 0xF
   783  0043                     	ds	1
   784                           
   785                           	psect	maintext
   786  002D                     __pmaintext:	
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 41 in file "main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  i               4   11[BANK0 ] unsigned long 
   797 ;;  ptr             2    9[BANK0 ] unsigned char [2]
   798 ;;  key             1   15[BANK0 ] unsigned char 
   799 ;;  cur_key         1    8[BANK0 ] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : B00/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       8       0       0       0
   811 ;;      Temps:          0       1       0       0       0
   812 ;;      Totals:         0       9       0       0       0
   813 ;;Total ram usage:        9 bytes
   814 ;; Hardware stack levels required when called:    6
   815 ;; This function calls:
   816 ;;		_clcd_print
   817 ;;		_clcd_putch
   818 ;;		_init_config
   819 ;;		_read_matrix_keypad
   820 ;;		main@clcd_write
   821 ;; This function is called by:
   822 ;;		Startup code after reset
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _main
   828  002D                     _main:	
   829                           
   830                           ;main.c: 42: unsigned char key,cur_key;
   831                           ;main.c: 43: static char arr[8] = {0,1,0,1,0,1,0,1};
   832                           ;main.c: 44: static int flag1 = 0, count = 0, count1 = 0, attempt, once = 1;
   833                           ;main.c: 45: char ptr[]= "1";
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   837  002D  1283               	bcf	3,5	;RP0=0, select bank0
   838  002E  1303               	bcf	3,6	;RP1=0, select bank0
   839  002F  084D               	movf	main@F1130+1,w
   840  0030  00BE               	movwf	main@ptr+1
   841  0031  084C               	movf	main@F1130,w
   842  0032  00BD               	movwf	main@ptr
   843                           
   844                           ;main.c: 46: static char pwd[8];
   845                           ;main.c: 48: init_config();
   846  0033  120A  118A  2476  120A  118A  	fcall	_init_config
   847  0038                     l1316:	
   848                           ;main.c: 50: while (1) {
   849                           
   850                           
   851                           ;main.c: 52: key = read_matrix_keypad(1);
   852  0038  3001               	movlw	1
   853  0039  120A  118A  2454  120A  118A  	fcall	_read_matrix_keypad
   854  003E  1283               	bcf	3,5	;RP0=0, select bank0
   855  003F  1303               	bcf	3,6	;RP1=0, select bank0
   856  0040  00BB               	movwf	??_main
   857  0041  083B               	movf	??_main,w
   858  0042  00C3               	movwf	main@key
   859                           
   860                           ;main.c: 54: if(key != 0xFF)
   861  0043  0A43               	incf	main@key,w
   862  0044  1903               	btfsc	3,2
   863  0045  284A               	goto	l1322
   864                           
   865                           ;main.c: 55: {
   866                           ;main.c: 56: cur_key = key;
   867  0046  0843               	movf	main@key,w
   868  0047  00BB               	movwf	??_main
   869  0048  083B               	movf	??_main,w
   870  0049  00BC               	movwf	main@cur_key
   871  004A                     l1322:	
   872                           
   873                           ;main.c: 57: }
   874                           ;main.c: 60: if(flag1 == 0)
   875  004A  0830               	movf	main@flag1,w
   876  004B  0431               	iorwf	main@flag1+1,w
   877  004C  1D03               	btfss	3,2
   878  004D  2838               	goto	l1316
   879                           
   880                           ;main.c: 61: {
   881                           ;main.c: 63: if (key != 0xFF && count < 8)
   882  004E  0A43               	incf	main@key,w
   883  004F  1903               	btfsc	3,2
   884  0050  288D               	goto	l1336
   885  0051  082F               	movf	main@count+1,w
   886  0052  3A80               	xorlw	128
   887  0053  00FF               	movwf	127
   888  0054  3080               	movlw	128
   889  0055  027F               	subwf	127,w
   890  0056  1D03               	skipz
   891  0057  285A               	goto	u975
   892  0058  3008               	movlw	8
   893  0059  022E               	subwf	main@count,w
   894  005A                     u975:	
   895  005A  1803               	skipnc
   896  005B  288D               	goto	l1336
   897                           
   898                           ;main.c: 64: {
   899                           ;main.c: 65: pwd[count] = key;
   900  005C  1283               	bcf	3,5	;RP0=0, select bank0
   901  005D  1303               	bcf	3,6	;RP1=0, select bank0
   902  005E  0843               	movf	main@key,w
   903  005F  00BB               	movwf	??_main
   904  0060  082E               	movf	main@count,w
   905  0061  3E20               	addlw	(low (main@pwd| 0))& (0+255)
   906  0062  0084               	movwf	4
   907  0063  083B               	movf	??_main,w
   908  0064  1383               	bcf	3,7	;select IRP bank0
   909  0065  0080               	movwf	0
   910                           
   911                           ;main.c: 69: clcd_putch('*', (0xC0 + count));
   912  0066  082E               	movf	main@count,w
   913  0067  3EC0               	addlw	192
   914  0068  00BB               	movwf	??_main
   915  0069  083B               	movf	??_main,w
   916  006A  00B8               	movwf	clcd_putch@addr
   917  006B  302A               	movlw	42
   918  006C  120A  118A  248D  120A  118A  	fcall	_clcd_putch
   919                           
   920                           ;main.c: 72: if(pwd[count] == arr[count])
   921  0071  1283               	bcf	3,5	;RP0=0, select bank0
   922  0072  1303               	bcf	3,6	;RP1=0, select bank0
   923  0073  082E               	movf	main@count,w
   924  0074  3E44               	addlw	(low (main@arr| 0))& (0+255)
   925  0075  0084               	movwf	4
   926  0076  1383               	bcf	3,7	;select IRP bank0
   927  0077  0800               	movf	0,w
   928  0078  00BB               	movwf	??_main
   929  0079  082E               	movf	main@count,w
   930  007A  3E20               	addlw	(low (main@pwd| 0))& (0+255)
   931  007B  0084               	movwf	4
   932  007C  0800               	movf	0,w
   933  007D  063B               	xorwf	??_main,w
   934  007E  1D03               	skipz
   935  007F  2886               	goto	l93
   936                           
   937                           ;main.c: 73: {
   938                           ;main.c: 74: count1++;
   939  0080  3001               	movlw	1
   940  0081  07AC               	addwf	main@count1,f
   941  0082  1803               	skipnc
   942  0083  0AAD               	incf	main@count1+1,f
   943  0084  3000               	movlw	0
   944  0085  07AD               	addwf	main@count1+1,f
   945  0086                     l93:	
   946                           
   947                           ;main.c: 75: }
   948                           ;main.c: 76: count++;
   949  0086  3001               	movlw	1
   950  0087  07AE               	addwf	main@count,f
   951  0088  1803               	skipnc
   952  0089  0AAF               	incf	main@count+1,f
   953  008A  3000               	movlw	0
   954  008B  07AF               	addwf	main@count+1,f
   955                           
   956                           ;main.c: 77: }
   957  008C  2838               	goto	l1316
   958  008D                     l1336:	
   959                           
   960                           ;main.c: 79: else if(count == 8 && count1 == count)
   961  008D  3008               	movlw	8
   962  008E  1283               	bcf	3,5	;RP0=0, select bank0
   963  008F  1303               	bcf	3,6	;RP1=0, select bank0
   964  0090  062E               	xorwf	main@count,w
   965  0091  042F               	iorwf	main@count+1,w
   966  0092  1D03               	btfss	3,2
   967  0093  28D5               	goto	l1352
   968  0094  082F               	movf	main@count+1,w
   969  0095  062D               	xorwf	main@count1+1,w
   970  0096  1D03               	skipz
   971  0097  289A               	goto	u1005
   972  0098  082E               	movf	main@count,w
   973  0099  062C               	xorwf	main@count1,w
   974  009A                     u1005:	
   975  009A  1D03               	skipz
   976  009B  28D5               	goto	l1352
   977                           
   978                           ;main.c: 80: {
   979                           ;main.c: 81: clcd_write(0x0C, 0);
   980  009C  01B4               	clrf	main@clcd_write@mode
   981  009D  300C               	movlw	12
   982  009E  120A  118A  2378  120A  118A  	fcall	main@clcd_write
   983                           
   984                           ;main.c: 83: clcd_write(0x01, 0);
   985  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   986  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   987  00A5  01B4               	clrf	main@clcd_write@mode
   988  00A6  3001               	movlw	1
   989  00A7  120A  118A  2378  120A  118A  	fcall	main@clcd_write
   990                           
   991                           ;main.c: 85: clcd_print("excellent you",(0x80 + 0));
   992  00AC  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   993  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   994  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   995  00AF  00B8               	movwf	clcd_print@str
   996  00B0  3080               	movlw	128
   997  00B1  00B9               	movwf	clcd_print@str+1
   998  00B2  3080               	movlw	128
   999  00B3  00BB               	movwf	??_main
  1000  00B4  083B               	movf	??_main,w
  1001  00B5  00BA               	movwf	clcd_print@addr
  1002  00B6  120A  118A  2424  120A  118A  	fcall	_clcd_print
  1003                           
  1004                           ;main.c: 86: clcd_print("cracked the code",(0xC0 + 0));
  1005  00BB  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1006  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1007  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1008  00BE  00B8               	movwf	clcd_print@str
  1009  00BF  3080               	movlw	128
  1010  00C0  00B9               	movwf	clcd_print@str+1
  1011  00C1  30C0               	movlw	192
  1012  00C2  00BB               	movwf	??_main
  1013  00C3  083B               	movf	??_main,w
  1014  00C4  00BA               	movwf	clcd_print@addr
  1015  00C5  120A  118A  2424  120A  118A  	fcall	_clcd_print
  1016                           
  1017                           ;main.c: 88: flag1 = 1;
  1018  00CA  3001               	movlw	1
  1019  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1020  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1021  00CD  00B0               	movwf	main@flag1
  1022  00CE  3000               	movlw	0
  1023  00CF  00B1               	movwf	main@flag1+1
  1024                           
  1025                           ;main.c: 89: if(TMR0IE == 1)
  1026  00D0  1E8B               	btfss	11,5	;volatile
  1027  00D1  2838               	goto	l1316
  1028                           
  1029                           ;main.c: 90: {
  1030                           ;main.c: 91: TMR0IE = 0;
  1031  00D2  128B               	bcf	11,5	;volatile
  1032                           
  1033                           ;main.c: 92: RB7 = 0;
  1034  00D3  1386               	bcf	6,7	;volatile
  1035                           
  1036                           ;main.c: 93: }
  1037                           ;main.c: 94: }
  1038  00D4  2838               	goto	l1316
  1039  00D5                     l1352:	
  1040                           
  1041                           ;main.c: 96: else if(count == 8 && count1 != count)
  1042  00D5  3008               	movlw	8
  1043  00D6  062E               	xorwf	main@count,w
  1044  00D7  042F               	iorwf	main@count+1,w
  1045  00D8  1D03               	btfss	3,2
  1046  00D9  2956               	goto	l1386
  1047  00DA  082F               	movf	main@count+1,w
  1048  00DB  062D               	xorwf	main@count1+1,w
  1049  00DC  1D03               	skipz
  1050  00DD  28E0               	goto	u1035
  1051  00DE  082E               	movf	main@count,w
  1052  00DF  062C               	xorwf	main@count1,w
  1053  00E0                     u1035:	
  1054  00E0  1903               	skipnz
  1055  00E1  2956               	goto	l1386
  1056                           
  1057                           ;main.c: 97: {
  1058                           ;main.c: 98: sigma = sigma + 2;
  1059  00E2  0832               	movf	_sigma,w
  1060  00E3  3E02               	addlw	2
  1061  00E4  00B2               	movwf	_sigma
  1062  00E5  0833               	movf	_sigma+1,w
  1063  00E6  1803               	skipnc
  1064  00E7  3E01               	addlw	1
  1065  00E8  3E00               	addlw	0
  1066  00E9  00B3               	movwf	_sigma+1
  1067                           
  1068                           ;main.c: 100: if(TMR0IE == 0)
  1069  00EA  1E8B               	btfss	11,5	;volatile
  1070                           
  1071                           ;main.c: 101: TMR0IE = 1;
  1072  00EB  168B               	bsf	11,5	;volatile
  1073                           
  1074                           ;main.c: 103: ++attempt;
  1075  00EC  3001               	movlw	1
  1076  00ED  07AA               	addwf	main@attempt,f
  1077  00EE  1803               	skipnc
  1078  00EF  0AAB               	incf	main@attempt+1,f
  1079  00F0  3000               	movlw	0
  1080  00F1  07AB               	addwf	main@attempt+1,f
  1081                           
  1082                           ;main.c: 104: count1 = 0;
  1083  00F2  01AC               	clrf	main@count1
  1084  00F3  01AD               	clrf	main@count1+1
  1085                           
  1086                           ;main.c: 105: count = 0;
  1087  00F4  01AE               	clrf	main@count
  1088  00F5  01AF               	clrf	main@count+1
  1089                           
  1090                           ;main.c: 106: once = 1;
  1091  00F6  3001               	movlw	1
  1092  00F7  00CE               	movwf	main@once
  1093  00F8  3000               	movlw	0
  1094  00F9  00CF               	movwf	main@once+1
  1095                           
  1096                           ;main.c: 110: clcd_write(0x01, 0);
  1097  00FA  01B4               	clrf	main@clcd_write@mode
  1098  00FB  3001               	movlw	1
  1099  00FC  120A  118A  2378  120A  118A  	fcall	main@clcd_write
  1100                           
  1101                           ;main.c: 111: clcd_write(0x0C, 0);
  1102  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0103  01B4               	clrf	main@clcd_write@mode
  1105  0104  300C               	movlw	12
  1106  0105  120A  118A  2378  120A  118A  	fcall	main@clcd_write
  1107                           
  1108                           ;main.c: 112: clcd_print("attempt",(0x80 + 0));
  1109  010A  303F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1110  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1111  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1112  010D  00B8               	movwf	clcd_print@str
  1113  010E  3080               	movlw	128
  1114  010F  00B9               	movwf	clcd_print@str+1
  1115  0110  3080               	movlw	128
  1116  0111  00BB               	movwf	??_main
  1117  0112  083B               	movf	??_main,w
  1118  0113  00BA               	movwf	clcd_print@addr
  1119  0114  120A  118A  2424  120A  118A  	fcall	_clcd_print
  1120                           
  1121                           ;main.c: 113: clcd_print(ptr,(0x80 + 9));
  1122  0119  303D               	movlw	(low (main@ptr| 0))& (0+255)
  1123  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1124  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1125  011C  00B8               	movwf	clcd_print@str
  1126  011D  3000               	movlw	0
  1127  011E  00B9               	movwf	clcd_print@str+1
  1128  011F  3089               	movlw	137
  1129  0120  00BB               	movwf	??_main
  1130  0121  083B               	movf	??_main,w
  1131  0122  00BA               	movwf	clcd_print@addr
  1132  0123  120A  118A  2424  120A  118A  	fcall	_clcd_print
  1133                           
  1134                           ;main.c: 114: ptr[0] = ptr[0] + 1;
  1135  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1137  012A  083D               	movf	main@ptr,w
  1138  012B  3E01               	addlw	1
  1139  012C  00BB               	movwf	??_main
  1140  012D  083B               	movf	??_main,w
  1141  012E  00BD               	movwf	main@ptr
  1142                           
  1143                           ;main.c: 115: for(unsigned long int i = 0; i < 1000; i++);
  1144  012F  3000               	movlw	0
  1145  0130  00C2               	movwf	main@i+3
  1146  0131  3000               	movlw	0
  1147  0132  00C1               	movwf	main@i+2
  1148  0133  3000               	movlw	0
  1149  0134  00C0               	movwf	main@i+1
  1150  0135  3000               	movlw	0
  1151  0136  00BF               	movwf	main@i
  1152  0137                     L1:	
  1153  0137  0842               	movf	main@i+3,w
  1154  0138  1D03               	btfss	3,2
  1155  0139  2838               	goto	l1316
  1156  013A  0841               	movf	main@i+2,w
  1157  013B  1D03               	btfss	3,2
  1158  013C  2838               	goto	l1316
  1159  013D  3003               	movlw	3
  1160  013E  0240               	subwf	main@i+1,w
  1161  013F  1D03               	skipz
  1162  0140  2945               	goto	u1053
  1163  0141  30E8               	movlw	232
  1164  0142  023F               	subwf	main@i,w
  1165  0143  1D03               	skipz
  1166  0144  2945               	goto	u1053
  1167  0145                     u1053:	
  1168  0145  1803               	btfsc	3,0
  1169  0146  2838               	goto	l1316
  1170  0147  3001               	movlw	1
  1171  0148  07BF               	addwf	main@i,f
  1172  0149  3000               	movlw	0
  1173  014A  1803               	skipnc
  1174  014B  3001               	movlw	1
  1175  014C  07C0               	addwf	main@i+1,f
  1176  014D  3000               	movlw	0
  1177  014E  1803               	skipnc
  1178  014F  3001               	movlw	1
  1179  0150  07C1               	addwf	main@i+2,f
  1180  0151  3000               	movlw	0
  1181  0152  1803               	skipnc
  1182  0153  3001               	movlw	1
  1183  0154  07C2               	addwf	main@i+3,f
  1184  0155  2937               	goto	L1
  1185  0156                     l1386:	
  1186                           ;main.c: 117: }
  1187                           
  1188                           
  1189                           ;main.c: 119: else if(attempt == 5)
  1190  0156  3005               	movlw	5
  1191  0157  062A               	xorwf	main@attempt,w
  1192  0158  042B               	iorwf	main@attempt+1,w
  1193  0159  1D03               	btfss	3,2
  1194  015A  2990               	goto	l1396
  1195                           
  1196                           ;main.c: 120: {
  1197                           ;main.c: 122: clcd_write(0x0C, 0);
  1198  015B  01B4               	clrf	main@clcd_write@mode
  1199  015C  300C               	movlw	12
  1200  015D  120A  118A  2378  120A  118A  	fcall	main@clcd_write
  1201                           
  1202                           ;main.c: 123: clcd_write(0x01, 0);
  1203  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0164  01B4               	clrf	main@clcd_write@mode
  1206  0165  3001               	movlw	1
  1207  0166  120A  118A  2378  120A  118A  	fcall	main@clcd_write
  1208                           
  1209                           ;main.c: 124: clcd_print("you are",(0x80 + 0));
  1210  016B  3037               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1211  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1212  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1213  016E  00B8               	movwf	clcd_print@str
  1214  016F  3080               	movlw	128
  1215  0170  00B9               	movwf	clcd_print@str+1
  1216  0171  3080               	movlw	128
  1217  0172  00BB               	movwf	??_main
  1218  0173  083B               	movf	??_main,w
  1219  0174  00BA               	movwf	clcd_print@addr
  1220  0175  120A  118A  2424  120A  118A  	fcall	_clcd_print
  1221                           
  1222                           ;main.c: 125: clcd_print("blocked",(0xC0 + 0));
  1223  017A  302F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1224  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1225  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1226  017D  00B8               	movwf	clcd_print@str
  1227  017E  3080               	movlw	128
  1228  017F  00B9               	movwf	clcd_print@str+1
  1229  0180  30C0               	movlw	192
  1230  0181  00BB               	movwf	??_main
  1231  0182  083B               	movf	??_main,w
  1232  0183  00BA               	movwf	clcd_print@addr
  1233  0184  120A  118A  2424  120A  118A  	fcall	_clcd_print
  1234                           
  1235                           ;main.c: 126: flag1 = 1;
  1236  0189  3001               	movlw	1
  1237  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1238  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1239  018C  00B0               	movwf	main@flag1
  1240  018D  3000               	movlw	0
  1241  018E  00B1               	movwf	main@flag1+1
  1242                           
  1243                           ;main.c: 128: }
  1244  018F  2838               	goto	l1316
  1245  0190                     l1396:	
  1246                           
  1247                           ;main.c: 130: else if(key == 0xFF && count == 0 && once)
  1248  0190  0A43               	incf	main@key,w
  1249  0191  1D03               	btfss	3,2
  1250  0192  2838               	goto	l1316
  1251  0193  082E               	movf	main@count,w
  1252  0194  042F               	iorwf	main@count+1,w
  1253  0195  1D03               	btfss	3,2
  1254  0196  2838               	goto	l1316
  1255  0197  084E               	movf	main@once,w
  1256  0198  044F               	iorwf	main@once+1,w
  1257  0199  1903               	btfsc	3,2
  1258  019A  2838               	goto	l1316
  1259                           
  1260                           ;main.c: 131: {
  1261                           ;main.c: 132: once = 0;
  1262  019B  01CE               	clrf	main@once
  1263  019C  01CF               	clrf	main@once+1
  1264                           
  1265                           ;main.c: 133: clcd_write(0x01, 0);
  1266  019D  01B4               	clrf	main@clcd_write@mode
  1267  019E  3001               	movlw	1
  1268  019F  120A  118A  2378  120A  118A  	fcall	main@clcd_write
  1269                           
  1270                           ;main.c: 134: clcd_print("Enter Password", (0x80 + 0));
  1271  01A4  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1272  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1273  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1274  01A7  00B8               	movwf	clcd_print@str
  1275  01A8  3080               	movlw	128
  1276  01A9  00B9               	movwf	clcd_print@str+1
  1277  01AA  3080               	movlw	128
  1278  01AB  00BB               	movwf	??_main
  1279  01AC  083B               	movf	??_main,w
  1280  01AD  00BA               	movwf	clcd_print@addr
  1281  01AE  120A  118A  2424  120A  118A  	fcall	_clcd_print
  1282                           
  1283                           ;main.c: 135: clcd_write(0xC0, 0);
  1284  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1285  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1286  01B5  01B4               	clrf	main@clcd_write@mode
  1287  01B6  30C0               	movlw	192
  1288  01B7  120A  118A  2378  120A  118A  	fcall	main@clcd_write
  1289                           
  1290                           ;main.c: 136: clcd_write(0x0F, 0);
  1291  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1292  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1293  01BE  01B4               	clrf	main@clcd_write@mode
  1294  01BF  300F               	movlw	15
  1295  01C0  120A  118A  2378  120A  118A  	fcall	main@clcd_write
  1296  01C5  2838               	goto	l1316
  1297  01C6                     __end_of_main:	
  1298                           ;main.c: 137: }
  1299                           ;main.c: 138: }
  1300                           ;main.c: 139: }
  1301                           ;main.c: 140: return;
  1302                           
  1303                           
  1304                           	psect	text1
  1305  0378                     __ptext1:	
  1306 ;; *************** function main@clcd_write *****************
  1307 ;; Defined at:
  1308 ;;		line 14 in file "main.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  byte            1    wreg     unsigned char 
  1311 ;;  mode            1    0[BANK0 ] unsigned char 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  byte            1    3[BANK0 ] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       1       0       0       0
  1324 ;;      Locals:         0       1       0       0       0
  1325 ;;      Temps:          0       2       0       0       0
  1326 ;;      Totals:         0       4       0       0       0
  1327 ;;Total ram usage:        4 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    2
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function main@clcd_write
  1339  0378                     main@clcd_write:	
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in main@clcd_write: [wreg+status,2+status,0]
  1343                           ;main@clcd_write@byte stored from wreg
  1344  0378  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0379  1303               	bcf	3,6	;RP1=0, select bank0
  1346  037A  00B7               	movwf	main@clcd_write@byte
  1347                           
  1348                           ;main.c: 16: RE2 = mode;
  1349  037B  1C34               	btfss	main@clcd_write@mode,0
  1350  037C  2B81               	goto	u770
  1351  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1352  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1353  037F  1509               	bsf	9,2	;volatile
  1354  0380  2B84               	goto	l1208
  1355  0381                     u770:	
  1356  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0383  1109               	bcf	9,2	;volatile
  1359  0384                     l1208:	
  1360                           
  1361                           ;main.c: 18: PORTD = byte & 0xF0;
  1362  0384  0837               	movf	main@clcd_write@byte,w
  1363  0385  39F0               	andlw	240
  1364  0386  0088               	movwf	8	;volatile
  1365                           
  1366                           ;main.c: 19: RE1 = 1;
  1367  0387  1489               	bsf	9,1	;volatile
  1368                           
  1369                           ;main.c: 20: _delay((unsigned long)((100)*(20000000/4000000.0)));
  1370  0388  30A5               	movlw	165
  1371  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1372  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1373  038B  00B5               	movwf	??main@clcd_write
  1374  038C                     u1137:	
  1375  038C  0BB5               	decfsz	??main@clcd_write,f
  1376  038D  2B8C               	goto	u1137
  1377  038E  2B8F               	nop2
  1378                           
  1379                           ;main.c: 21: RE1 = 0;
  1380  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0391  1089               	bcf	9,1	;volatile
  1383                           
  1384                           ;main.c: 23: PORTD = (byte & 0x0F) << 4;
  1385  0392  0837               	movf	main@clcd_write@byte,w
  1386  0393  390F               	andlw	15
  1387  0394  00B5               	movwf	??main@clcd_write
  1388  0395  3003               	movlw	3
  1389  0396                     u795:	
  1390  0396  1003               	clrc
  1391  0397  0DB5               	rlf	??main@clcd_write,f
  1392  0398  3EFF               	addlw	-1
  1393  0399  1D03               	skipz
  1394  039A  2B96               	goto	u795
  1395  039B  1003               	clrc
  1396  039C  0D35               	rlf	??main@clcd_write,w
  1397  039D  0088               	movwf	8	;volatile
  1398                           
  1399                           ;main.c: 24: RE1 = 1;
  1400  039E  1489               	bsf	9,1	;volatile
  1401                           
  1402                           ;main.c: 25: _delay((unsigned long)((100)*(20000000/4000000.0)));
  1403  039F  30A5               	movlw	165
  1404  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1405  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1406  03A2  00B5               	movwf	??main@clcd_write
  1407  03A3                     u1147:	
  1408  03A3  0BB5               	decfsz	??main@clcd_write,f
  1409  03A4  2BA3               	goto	u1147
  1410  03A5  2BA6               	nop2
  1411                           
  1412                           ;main.c: 26: RE1 = 0;
  1413  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1414  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1415  03A8  1089               	bcf	9,1	;volatile
  1416                           
  1417                           ;main.c: 28: _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1418  03A9  301B               	movlw	27
  1419  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1420  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1421  03AC  00B6               	movwf	??main@clcd_write+1
  1422  03AD  309D               	movlw	157
  1423  03AE  00B5               	movwf	??main@clcd_write
  1424  03AF                     u1157:	
  1425  03AF  0BB5               	decfsz	??main@clcd_write,f
  1426  03B0  2BAF               	goto	u1157
  1427  03B1  0BB6               	decfsz	??main@clcd_write+1,f
  1428  03B2  2BAF               	goto	u1157
  1429  03B3  2BB4               	nop2
  1430  03B4  0008               	return
  1431  03B5                     __end_ofmain@clcd_write:	
  1432                           
  1433                           	psect	text2
  1434  0454                     __ptext2:	
  1435 ;; *************** function _read_matrix_keypad *****************
  1436 ;; Defined at:
  1437 ;;		line 111 in file "matrix_keypad.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  mode            1    wreg     unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  mode            1    3[BANK0 ] unsigned char 
  1442 ;;  key             1    4[BANK0 ] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      unsigned char 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       2       0       0       0
  1454 ;;      Temps:          0       1       0       0       0
  1455 ;;      Totals:         0       3       0       0       0
  1456 ;;Total ram usage:        3 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    3
  1459 ;; This function calls:
  1460 ;;		_scan_keypad
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _read_matrix_keypad
  1468  0454                     _read_matrix_keypad:	
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1472                           ;read_matrix_keypad@mode stored from wreg
  1473  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0456  00B7               	movwf	read_matrix_keypad@mode
  1476                           
  1477                           ;matrix_keypad.c: 113: static unsigned char once = 1;
  1478                           ;matrix_keypad.c: 114: unsigned char key;
  1479                           ;matrix_keypad.c: 116: key = scan_keypad();
  1480  0457  120A  118A  21C6  120A  118A  	fcall	_scan_keypad
  1481  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1482  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1483  045E  00B6               	movwf	??_read_matrix_keypad
  1484  045F  0836               	movf	??_read_matrix_keypad,w
  1485  0460  00B8               	movwf	read_matrix_keypad@key
  1486                           
  1487                           ;matrix_keypad.c: 118: if (mode == 0)
  1488  0461  0837               	movf	read_matrix_keypad@mode,w
  1489  0462  1D03               	btfss	3,2
  1490  0463  2C66               	goto	l1248
  1491                           
  1492                           ;matrix_keypad.c: 119: {
  1493                           ;matrix_keypad.c: 120: return key;
  1494  0464  0838               	movf	read_matrix_keypad@key,w
  1495  0465  0008               	return
  1496  0466                     l1248:	
  1497                           ;matrix_keypad.c: 121: }
  1498                           
  1499                           
  1500                           ;matrix_keypad.c: 122: else
  1501                           ;matrix_keypad.c: 123: {
  1502                           ;matrix_keypad.c: 124: if ((key != 0xFF) && once)
  1503  0466  0A38               	incf	read_matrix_keypad@key,w
  1504  0467  1903               	btfsc	3,2
  1505  0468  2C6F               	goto	l1260
  1506  0469  0850               	movf	read_matrix_keypad@once,w
  1507  046A  1903               	btfsc	3,2
  1508  046B  2C6F               	goto	l1260
  1509                           
  1510                           ;matrix_keypad.c: 125: {
  1511                           ;matrix_keypad.c: 126: once = 0;
  1512  046C  01D0               	clrf	read_matrix_keypad@once
  1513                           
  1514                           ;matrix_keypad.c: 127: return key;
  1515  046D  0838               	movf	read_matrix_keypad@key,w
  1516  046E  0008               	return
  1517  046F                     l1260:	
  1518                           ;matrix_keypad.c: 128: }
  1519                           
  1520                           
  1521                           ;matrix_keypad.c: 130: else if (key == 0xFF)
  1522  046F  0A38               	incf	read_matrix_keypad@key,w
  1523  0470  1D03               	btfss	3,2
  1524  0471  2C74               	goto	l1264
  1525                           
  1526                           ;matrix_keypad.c: 131: {
  1527                           ;matrix_keypad.c: 132: once = 1;
  1528  0472  01D0               	clrf	read_matrix_keypad@once
  1529  0473  0AD0               	incf	read_matrix_keypad@once,f
  1530  0474                     l1264:	
  1531                           
  1532                           ;matrix_keypad.c: 133: }
  1533                           ;matrix_keypad.c: 134: }
  1534                           ;matrix_keypad.c: 136: return 0xFF;
  1535  0474  30FF               	movlw	255
  1536  0475  0008               	return
  1537  0476                     __end_of_read_matrix_keypad:	
  1538                           
  1539                           	psect	text3
  1540  01C6                     __ptext3:	
  1541 ;; *************** function _scan_keypad *****************
  1542 ;; Defined at:
  1543 ;;		line 24 in file "matrix_keypad.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  i               2    0[BANK0 ] int 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         0       2       0       0       0
  1559 ;;      Temps:          0       0       0       0       0
  1560 ;;      Totals:         0       2       0       0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    2
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_read_matrix_keypad
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _scan_keypad
  1573  01C6                     _scan_keypad:	
  1574                           
  1575                           ;matrix_keypad.c: 26: int i;
  1576                           ;matrix_keypad.c: 28: RD3 = 0;
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1580  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1581  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1582  01C8  1188               	bcf	8,3	;volatile
  1583                           
  1584                           ;matrix_keypad.c: 29: RD2 = 1;
  1585  01C9  1508               	bsf	8,2	;volatile
  1586                           
  1587                           ;matrix_keypad.c: 30: RD1 = 1;
  1588  01CA  1488               	bsf	8,1	;volatile
  1589                           
  1590                           ;matrix_keypad.c: 31: RD0 = 1;
  1591  01CB  1408               	bsf	8,0	;volatile
  1592                           
  1593                           ;matrix_keypad.c: 33: for (i = 100; i--; );
  1594  01CC  3064               	movlw	100
  1595  01CD  00B4               	movwf	scan_keypad@i
  1596  01CE  3000               	movlw	0
  1597  01CF  00B5               	movwf	scan_keypad@i+1
  1598  01D0                     l1114:	
  1599  01D0  30FF               	movlw	255
  1600  01D1  07B4               	addwf	scan_keypad@i,f
  1601  01D2  1803               	skipnc
  1602  01D3  0AB5               	incf	scan_keypad@i+1,f
  1603  01D4  30FF               	movlw	255
  1604  01D5  07B5               	addwf	scan_keypad@i+1,f
  1605  01D6  0A34               	incf	scan_keypad@i,w
  1606  01D7  1D03               	skipz
  1607  01D8  29D0               	goto	l1114
  1608  01D9  0A35               	incf	scan_keypad@i+1,w
  1609  01DA  1D03               	btfss	3,2
  1610  01DB  29D0               	goto	l1114
  1611                           
  1612                           ;matrix_keypad.c: 35: if (RB0 == 0)
  1613  01DC  1806               	btfsc	6,0	;volatile
  1614  01DD  29E0               	goto	l137
  1615                           
  1616                           ;matrix_keypad.c: 36: {
  1617                           ;matrix_keypad.c: 37: return 1;
  1618  01DE  3001               	movlw	1
  1619  01DF  0008               	return
  1620  01E0                     l137:	
  1621                           ;matrix_keypad.c: 38: }
  1622                           
  1623                           
  1624                           ;matrix_keypad.c: 39: else if (RB1 == 0)
  1625  01E0  1886               	btfsc	6,1	;volatile
  1626  01E1  29E4               	goto	l140
  1627                           
  1628                           ;matrix_keypad.c: 40: {
  1629                           ;matrix_keypad.c: 41: return 2;
  1630  01E2  3002               	movlw	2
  1631  01E3  0008               	return
  1632  01E4                     l140:	
  1633                           ;matrix_keypad.c: 42: }
  1634                           
  1635                           
  1636                           ;matrix_keypad.c: 43: else if (RB2 == 0)
  1637  01E4  1906               	btfsc	6,2	;volatile
  1638  01E5  29E8               	goto	l139
  1639                           
  1640                           ;matrix_keypad.c: 44: {
  1641                           ;matrix_keypad.c: 45: return 3;
  1642  01E6  3003               	movlw	3
  1643  01E7  0008               	return
  1644  01E8                     l139:	
  1645                           
  1646                           ;matrix_keypad.c: 46: }
  1647                           ;matrix_keypad.c: 48: RD3 = 1;
  1648  01E8  1588               	bsf	8,3	;volatile
  1649                           
  1650                           ;matrix_keypad.c: 49: RD2 = 0;
  1651  01E9  1108               	bcf	8,2	;volatile
  1652                           
  1653                           ;matrix_keypad.c: 50: RD1 = 1;
  1654  01EA  1488               	bsf	8,1	;volatile
  1655                           
  1656                           ;matrix_keypad.c: 51: RD0 = 1;
  1657  01EB  1408               	bsf	8,0	;volatile
  1658                           
  1659                           ;matrix_keypad.c: 53: for (i = 100; i--; );
  1660  01EC  3064               	movlw	100
  1661  01ED  00B4               	movwf	scan_keypad@i
  1662  01EE  3000               	movlw	0
  1663  01EF  00B5               	movwf	scan_keypad@i+1
  1664  01F0                     l1134:	
  1665  01F0  30FF               	movlw	255
  1666  01F1  07B4               	addwf	scan_keypad@i,f
  1667  01F2  1803               	skipnc
  1668  01F3  0AB5               	incf	scan_keypad@i+1,f
  1669  01F4  30FF               	movlw	255
  1670  01F5  07B5               	addwf	scan_keypad@i+1,f
  1671  01F6  0A34               	incf	scan_keypad@i,w
  1672  01F7  1D03               	skipz
  1673  01F8  29F0               	goto	l1134
  1674  01F9  0A35               	incf	scan_keypad@i+1,w
  1675  01FA  1D03               	btfss	3,2
  1676  01FB  29F0               	goto	l1134
  1677                           
  1678                           ;matrix_keypad.c: 55: if (RB0 == 0)
  1679  01FC  1806               	btfsc	6,0	;volatile
  1680  01FD  2A00               	goto	l146
  1681                           
  1682                           ;matrix_keypad.c: 56: {
  1683                           ;matrix_keypad.c: 57: return 4;
  1684  01FE  3004               	movlw	4
  1685  01FF  0008               	return
  1686  0200                     l146:	
  1687                           ;matrix_keypad.c: 58: }
  1688                           
  1689                           
  1690                           ;matrix_keypad.c: 59: else if (RB1 == 0)
  1691  0200  1886               	btfsc	6,1	;volatile
  1692  0201  2A04               	goto	l148
  1693                           
  1694                           ;matrix_keypad.c: 60: {
  1695                           ;matrix_keypad.c: 61: return 5;
  1696  0202  3005               	movlw	5
  1697  0203  0008               	return
  1698  0204                     l148:	
  1699                           ;matrix_keypad.c: 62: }
  1700                           
  1701                           
  1702                           ;matrix_keypad.c: 63: else if (RB2 == 0)
  1703  0204  1906               	btfsc	6,2	;volatile
  1704  0205  2A08               	goto	l147
  1705                           
  1706                           ;matrix_keypad.c: 64: {
  1707                           ;matrix_keypad.c: 65: return 6;
  1708  0206  3006               	movlw	6
  1709  0207  0008               	return
  1710  0208                     l147:	
  1711                           
  1712                           ;matrix_keypad.c: 66: }
  1713                           ;matrix_keypad.c: 68: RD3 = 1;
  1714  0208  1588               	bsf	8,3	;volatile
  1715                           
  1716                           ;matrix_keypad.c: 69: RD2 = 1;
  1717  0209  1508               	bsf	8,2	;volatile
  1718                           
  1719                           ;matrix_keypad.c: 70: RD1 = 0;
  1720  020A  1088               	bcf	8,1	;volatile
  1721                           
  1722                           ;matrix_keypad.c: 71: RD0 = 1;
  1723  020B  1408               	bsf	8,0	;volatile
  1724                           
  1725                           ;matrix_keypad.c: 73: for (i = 100; i--; );
  1726  020C  3064               	movlw	100
  1727  020D  00B4               	movwf	scan_keypad@i
  1728  020E  3000               	movlw	0
  1729  020F  00B5               	movwf	scan_keypad@i+1
  1730  0210                     l1154:	
  1731  0210  30FF               	movlw	255
  1732  0211  07B4               	addwf	scan_keypad@i,f
  1733  0212  1803               	skipnc
  1734  0213  0AB5               	incf	scan_keypad@i+1,f
  1735  0214  30FF               	movlw	255
  1736  0215  07B5               	addwf	scan_keypad@i+1,f
  1737  0216  0A34               	incf	scan_keypad@i,w
  1738  0217  1D03               	skipz
  1739  0218  2A10               	goto	l1154
  1740  0219  0A35               	incf	scan_keypad@i+1,w
  1741  021A  1D03               	btfss	3,2
  1742  021B  2A10               	goto	l1154
  1743                           
  1744                           ;matrix_keypad.c: 75: if (RB0 == 0)
  1745  021C  1806               	btfsc	6,0	;volatile
  1746  021D  2A20               	goto	l154
  1747                           
  1748                           ;matrix_keypad.c: 76: {
  1749                           ;matrix_keypad.c: 77: return 7;
  1750  021E  3007               	movlw	7
  1751  021F  0008               	return
  1752  0220                     l154:	
  1753                           ;matrix_keypad.c: 78: }
  1754                           
  1755                           
  1756                           ;matrix_keypad.c: 79: else if (RB1 == 0)
  1757  0220  1886               	btfsc	6,1	;volatile
  1758  0221  2A24               	goto	l156
  1759                           
  1760                           ;matrix_keypad.c: 80: {
  1761                           ;matrix_keypad.c: 81: return 8;
  1762  0222  3008               	movlw	8
  1763  0223  0008               	return
  1764  0224                     l156:	
  1765                           ;matrix_keypad.c: 82: }
  1766                           
  1767                           
  1768                           ;matrix_keypad.c: 83: else if (RB2 == 0)
  1769  0224  1906               	btfsc	6,2	;volatile
  1770  0225  2A28               	goto	l155
  1771                           
  1772                           ;matrix_keypad.c: 84: {
  1773                           ;matrix_keypad.c: 85: return 9;
  1774  0226  3009               	movlw	9
  1775  0227  0008               	return
  1776  0228                     l155:	
  1777                           
  1778                           ;matrix_keypad.c: 86: }
  1779                           ;matrix_keypad.c: 88: RD3 = 1;
  1780  0228  1588               	bsf	8,3	;volatile
  1781                           
  1782                           ;matrix_keypad.c: 89: RD2 = 1;
  1783  0229  1508               	bsf	8,2	;volatile
  1784                           
  1785                           ;matrix_keypad.c: 90: RD1 = 1;
  1786  022A  1488               	bsf	8,1	;volatile
  1787                           
  1788                           ;matrix_keypad.c: 91: RD0 = 0;
  1789  022B  1008               	bcf	8,0	;volatile
  1790                           
  1791                           ;matrix_keypad.c: 93: for (i = 100; i--; );
  1792  022C  3064               	movlw	100
  1793  022D  00B4               	movwf	scan_keypad@i
  1794  022E  3000               	movlw	0
  1795  022F  00B5               	movwf	scan_keypad@i+1
  1796  0230                     l1174:	
  1797  0230  30FF               	movlw	255
  1798  0231  07B4               	addwf	scan_keypad@i,f
  1799  0232  1803               	skipnc
  1800  0233  0AB5               	incf	scan_keypad@i+1,f
  1801  0234  30FF               	movlw	255
  1802  0235  07B5               	addwf	scan_keypad@i+1,f
  1803  0236  0A34               	incf	scan_keypad@i,w
  1804  0237  1D03               	skipz
  1805  0238  2A30               	goto	l1174
  1806  0239  0A35               	incf	scan_keypad@i+1,w
  1807  023A  1D03               	btfss	3,2
  1808  023B  2A30               	goto	l1174
  1809                           
  1810                           ;matrix_keypad.c: 95: if (RB0 == 0)
  1811  023C  1806               	btfsc	6,0	;volatile
  1812  023D  2A40               	goto	l162
  1813                           
  1814                           ;matrix_keypad.c: 96: {
  1815                           ;matrix_keypad.c: 97: return '*';
  1816  023E  302A               	movlw	42
  1817  023F  0008               	return
  1818  0240                     l162:	
  1819                           ;matrix_keypad.c: 98: }
  1820                           
  1821                           
  1822                           ;matrix_keypad.c: 99: else if (RB1 == 0)
  1823  0240  1886               	btfsc	6,1	;volatile
  1824  0241  2A44               	goto	l164
  1825                           
  1826                           ;matrix_keypad.c: 100: {
  1827                           ;matrix_keypad.c: 101: return 0;
  1828  0242  3000               	movlw	0
  1829  0243  0008               	return
  1830  0244                     l164:	
  1831                           ;matrix_keypad.c: 102: }
  1832                           
  1833                           
  1834                           ;matrix_keypad.c: 103: else if (RB2 == 0)
  1835  0244  1906               	btfsc	6,2	;volatile
  1836  0245  2A48               	goto	l1192
  1837                           
  1838                           ;matrix_keypad.c: 104: {
  1839                           ;matrix_keypad.c: 105: return '#';
  1840  0246  3023               	movlw	35
  1841  0247  0008               	return
  1842  0248                     l1192:	
  1843                           
  1844                           ;matrix_keypad.c: 106: }
  1845                           ;matrix_keypad.c: 108: return 0xFF;
  1846  0248  30FF               	movlw	255
  1847  0249  0008               	return
  1848  024A                     __end_of_scan_keypad:	
  1849                           
  1850                           	psect	text4
  1851  0476                     __ptext4:	
  1852 ;; *************** function _init_config *****************
  1853 ;; Defined at:
  1854 ;;		line 31 in file "main.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    5
  1875 ;; This function calls:
  1876 ;;		_init_clcd
  1877 ;;		_init_matrix_keypad
  1878 ;;		_init_timer0
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _init_config
  1886  0476                     _init_config:	
  1887                           
  1888                           ;main.c: 32: TRISB7 = 0;
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1892  0476  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0477  1303               	bcf	3,6	;RP1=0, select bank1
  1894  0478  1386               	bcf	6,7	;volatile
  1895                           
  1896                           ;main.c: 33: PORTB = PORTB & 0x7F;
  1897  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1898  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1899  047B  0806               	movf	6,w	;volatile
  1900  047C  397F               	andlw	127
  1901  047D  0086               	movwf	6	;volatile
  1902                           
  1903                           ;main.c: 34: GIE = 1;
  1904  047E  178B               	bsf	11,7	;volatile
  1905                           
  1906                           ;main.c: 35: init_clcd();
  1907  047F  120A  118A  24D7  120A  118A  	fcall	_init_clcd
  1908                           
  1909                           ;main.c: 36: init_matrix_keypad();
  1910  0484  120A  118A  24B1  120A  118A  	fcall	_init_matrix_keypad
  1911                           
  1912                           ;main.c: 37: init_timer0();
  1913  0489  120A  118A  24CE   	fcall	_init_timer0
  1914  048C  0008               	return
  1915  048D                     __end_of_init_config:	
  1916                           
  1917                           	psect	text5
  1918  04CE                     __ptext5:	
  1919 ;; *************** function _init_timer0 *****************
  1920 ;; Defined at:
  1921 ;;		line 3 in file "timers.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         0       0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0
  1938 ;;      Totals:         0       0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    2
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_init_config
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _init_timer0
  1951  04CE                     _init_timer0:	
  1952                           
  1953                           ;timers.c: 6: T0CS = 0;
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _init_timer0: [wreg]
  1957  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  1958  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  1959  04D0  1281               	bcf	1,5	;volatile
  1960                           
  1961                           ;timers.c: 9: PSA = 1;
  1962  04D1  1581               	bsf	1,3	;volatile
  1963                           
  1964                           ;timers.c: 11: TMR0 = 6;
  1965  04D2  3006               	movlw	6
  1966  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1967  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1968  04D5  0081               	movwf	1	;volatile
  1969  04D6  0008               	return
  1970  04D7                     __end_of_init_timer0:	
  1971                           
  1972                           	psect	text6
  1973  04B1                     __ptext6:	
  1974 ;; *************** function _init_matrix_keypad *****************
  1975 ;; Defined at:
  1976 ;;		line 4 in file "matrix_keypad.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    2
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_init_config
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _init_matrix_keypad
  2006  04B1                     _init_matrix_keypad:	
  2007                           
  2008                           ;matrix_keypad.c: 8: TRISB = TRISB | 0x07;
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  2012  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2013  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2014  04B3  0806               	movf	6,w	;volatile
  2015  04B4  3807               	iorlw	7
  2016  04B5  0086               	movwf	6	;volatile
  2017                           
  2018                           ;matrix_keypad.c: 12: TRISD = TRISD & 0xF0;
  2019  04B6  0808               	movf	8,w	;volatile
  2020  04B7  39F0               	andlw	240
  2021  04B8  0088               	movwf	8	;volatile
  2022                           
  2023                           ;matrix_keypad.c: 15: nRBPU = 0;
  2024  04B9  1381               	bcf	1,7	;volatile
  2025                           
  2026                           ;matrix_keypad.c: 18: RD3 = 1;
  2027  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2028  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2029  04BC  1588               	bsf	8,3	;volatile
  2030                           
  2031                           ;matrix_keypad.c: 19: RD2 = 1;
  2032  04BD  1508               	bsf	8,2	;volatile
  2033                           
  2034                           ;matrix_keypad.c: 20: RD1 = 1;
  2035  04BE  1488               	bsf	8,1	;volatile
  2036                           
  2037                           ;matrix_keypad.c: 21: RD0 = 1;
  2038  04BF  1408               	bsf	8,0	;volatile
  2039  04C0  0008               	return
  2040  04C1                     __end_of_init_matrix_keypad:	
  2041                           
  2042                           	psect	text7
  2043  04D7                     __ptext7:	
  2044 ;; *************** function _init_clcd *****************
  2045 ;; Defined at:
  2046 ;;		line 45 in file "clcd.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    4
  2067 ;; This function calls:
  2068 ;;		_init_display_controller
  2069 ;; This function is called by:
  2070 ;;		_init_config
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _init_clcd
  2076  04D7                     _init_clcd:	
  2077                           
  2078                           ;clcd.c: 48: TRISD = 0x00;
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  2082  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2083  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2084  04D9  0188               	clrf	8	;volatile
  2085                           
  2086                           ;clcd.c: 51: TRISE2 = 0;
  2087  04DA  1109               	bcf	9,2	;volatile
  2088                           
  2089                           ;clcd.c: 52: TRISE1 = 0;
  2090  04DB  1089               	bcf	9,1	;volatile
  2091                           
  2092                           ;clcd.c: 54: init_display_controller();
  2093  04DC  120A  118A  224A   	fcall	_init_display_controller
  2094  04DF  0008               	return
  2095  04E0                     __end_of_init_clcd:	
  2096                           
  2097                           	psect	text8
  2098  024A                     __ptext8:	
  2099 ;; *************** function _init_display_controller *****************
  2100 ;; Defined at:
  2101 ;;		line 21 in file "clcd.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2115 ;;      Params:         0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0
  2117 ;;      Temps:          0       2       0       0       0
  2118 ;;      Totals:         0       2       0       0       0
  2119 ;;Total ram usage:        2 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    3
  2122 ;; This function calls:
  2123 ;;		_clcd_write
  2124 ;; This function is called by:
  2125 ;;		_init_clcd
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _init_display_controller
  2131  024A                     _init_display_controller:	
  2132                           
  2133                           ;clcd.c: 24: _delay((unsigned long)((30)*(20000000/4000.0)));
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  2137  024A  30C3               	movlw	195
  2138  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2139  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2140  024D  00B9               	movwf	??_init_display_controller+1
  2141  024E  30CC               	movlw	204
  2142  024F  00B8               	movwf	??_init_display_controller
  2143  0250                     u1167:	
  2144  0250  0BB8               	decfsz	??_init_display_controller,f
  2145  0251  2A50               	goto	u1167
  2146  0252  0BB9               	decfsz	??_init_display_controller+1,f
  2147  0253  2A50               	goto	u1167
  2148  0254  0000               	nop
  2149                           
  2150                           ;clcd.c: 27: clcd_write(0x33, 0);
  2151  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0257  01B4               	clrf	clcd_write@mode
  2154  0258  3033               	movlw	51
  2155  0259  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2156                           
  2157                           ;clcd.c: 28: _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2158  025E  301B               	movlw	27
  2159  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0261  00B9               	movwf	??_init_display_controller+1
  2162  0262  309D               	movlw	157
  2163  0263  00B8               	movwf	??_init_display_controller
  2164  0264                     u1177:	
  2165  0264  0BB8               	decfsz	??_init_display_controller,f
  2166  0265  2A64               	goto	u1177
  2167  0266  0BB9               	decfsz	??_init_display_controller+1,f
  2168  0267  2A64               	goto	u1177
  2169  0268  2A69               	nop2
  2170                           
  2171                           ;clcd.c: 29: clcd_write(0x33, 0);
  2172  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2173  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2174  026B  01B4               	clrf	clcd_write@mode
  2175  026C  3033               	movlw	51
  2176  026D  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2177                           
  2178                           ;clcd.c: 30: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2179  0272  30A5               	movlw	165
  2180  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0275  00B8               	movwf	??_init_display_controller
  2183  0276                     u1187:	
  2184  0276  0BB8               	decfsz	??_init_display_controller,f
  2185  0277  2A76               	goto	u1187
  2186  0278  2A79               	nop2
  2187                           
  2188                           ;clcd.c: 31: clcd_write(0x33, 0);
  2189  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2190  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2191  027B  01B4               	clrf	clcd_write@mode
  2192  027C  3033               	movlw	51
  2193  027D  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2194                           
  2195                           ;clcd.c: 32: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2196  0282  2A83               	nop2	;2 cycle nop
  2197  0283  2A84               	nop2	;2 cycle nop
  2198  0284  0000               	nop
  2199                           
  2200                           ;clcd.c: 34: clcd_write(0x02, 0);
  2201  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0287  01B4               	clrf	clcd_write@mode
  2204  0288  3002               	movlw	2
  2205  0289  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2206                           
  2207                           ;clcd.c: 35: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2208  028E  30A5               	movlw	165
  2209  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0291  00B8               	movwf	??_init_display_controller
  2212  0292                     u1197:	
  2213  0292  0BB8               	decfsz	??_init_display_controller,f
  2214  0293  2A92               	goto	u1197
  2215  0294  2A95               	nop2
  2216                           
  2217                           ;clcd.c: 36: clcd_write(0x28, 0);
  2218  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0297  01B4               	clrf	clcd_write@mode
  2221  0298  3028               	movlw	40
  2222  0299  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2223                           
  2224                           ;clcd.c: 37: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2225  029E  30A5               	movlw	165
  2226  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2227  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2228  02A1  00B8               	movwf	??_init_display_controller
  2229  02A2                     u1207:	
  2230  02A2  0BB8               	decfsz	??_init_display_controller,f
  2231  02A3  2AA2               	goto	u1207
  2232  02A4  2AA5               	nop2
  2233                           
  2234                           ;clcd.c: 38: clcd_write(0x01, 0);
  2235  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2236  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2237  02A7  01B4               	clrf	clcd_write@mode
  2238  02A8  3001               	movlw	1
  2239  02A9  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2240                           
  2241                           ;clcd.c: 39: _delay((unsigned long)((500)*(20000000/4000000.0)));
  2242  02AE  3004               	movlw	4
  2243  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2244  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2245  02B1  00B9               	movwf	??_init_display_controller+1
  2246  02B2  303D               	movlw	61
  2247  02B3  00B8               	movwf	??_init_display_controller
  2248  02B4                     u1217:	
  2249  02B4  0BB8               	decfsz	??_init_display_controller,f
  2250  02B5  2AB4               	goto	u1217
  2251  02B6  0BB9               	decfsz	??_init_display_controller+1,f
  2252  02B7  2AB4               	goto	u1217
  2253                           
  2254                           ;clcd.c: 40: clcd_write(0x0C, 0);
  2255  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2256  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2257  02BA  01B4               	clrf	clcd_write@mode
  2258  02BB  300C               	movlw	12
  2259  02BC  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2260                           
  2261                           ;clcd.c: 41: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2262  02C1  30A5               	movlw	165
  2263  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2264  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2265  02C4  00B8               	movwf	??_init_display_controller
  2266  02C5                     u1227:	
  2267  02C5  0BB8               	decfsz	??_init_display_controller,f
  2268  02C6  2AC5               	goto	u1227
  2269  02C7  2AC8               	nop2
  2270  02C8  0008               	return
  2271  02C9                     __end_of_init_display_controller:	
  2272                           
  2273                           	psect	text9
  2274  048D                     __ptext9:	
  2275 ;; *************** function _clcd_putch *****************
  2276 ;; Defined at:
  2277 ;;		line 57 in file "clcd.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  data            1    wreg     const unsigned char 
  2280 ;;  addr            1    4[BANK0 ] unsigned char 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  data            1    5[BANK0 ] const unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       1       0       0       0
  2293 ;;      Locals:         0       1       0       0       0
  2294 ;;      Temps:          0       0       0       0       0
  2295 ;;      Totals:         0       2       0       0       0
  2296 ;;Total ram usage:        2 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    3
  2299 ;; This function calls:
  2300 ;;		_clcd_write
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function _clcd_putch
  2308  048D                     _clcd_putch:	
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  2312                           ;clcd_putch@data stored from wreg
  2313  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2314  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2315  048F  00B9               	movwf	clcd_putch@data
  2316                           
  2317                           ;clcd.c: 59: clcd_write(addr, 0);
  2318  0490  01B4               	clrf	clcd_write@mode
  2319  0491  0838               	movf	clcd_putch@addr,w
  2320  0492  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2321                           
  2322                           ;clcd.c: 60: clcd_write(data, 1);
  2323  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0499  01B4               	clrf	clcd_write@mode
  2326  049A  0AB4               	incf	clcd_write@mode,f
  2327  049B  0839               	movf	clcd_putch@data,w
  2328  049C  120A  118A  23B5   	fcall	_clcd_write
  2329  049F  0008               	return
  2330  04A0                     __end_of_clcd_putch:	
  2331                           
  2332                           	psect	text10
  2333  0424                     __ptext10:	
  2334 ;; *************** function _clcd_print *****************
  2335 ;; Defined at:
  2336 ;;		line 63 in file "clcd.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  2339 ;;		 -> STR_6(15), STR_5(8), STR_4(8), STR_3(8), 
  2340 ;;		 -> STR_2(17), STR_1(14), main@ptr(2), 
  2341 ;;  addr            1    6[BANK0 ] unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2353 ;;      Params:         0       3       0       0       0
  2354 ;;      Locals:         0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0
  2356 ;;      Totals:         0       3       0       0       0
  2357 ;;Total ram usage:        3 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    3
  2360 ;; This function calls:
  2361 ;;		_clcd_write
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _clcd_print
  2369  0424                     _clcd_print:	
  2370                           
  2371                           ;clcd.c: 65: clcd_write(addr, 0);
  2372                           
  2373                           ;incstack = 0
  2374                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2375  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0426  01B4               	clrf	clcd_write@mode
  2378  0427  083A               	movf	clcd_print@addr,w
  2379  0428  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2380  042D                     l1204:	
  2381                           ;clcd.c: 67: while (*str != '\0')
  2382                           
  2383  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2384  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2385  042F  0839               	movf	clcd_print@str+1,w
  2386  0430  00FF               	movwf	127
  2387  0431  0838               	movf	clcd_print@str,w
  2388  0432  0084               	movwf	4
  2389  0433  120A  118A  2322  120A  118A  	fcall	stringtab
  2390  0438  3A00               	xorlw	0
  2391  0439  1903               	btfsc	3,2
  2392  043A  0008               	return
  2393                           
  2394                           ;clcd.c: 68: {
  2395                           ;clcd.c: 69: clcd_write(*str, 1);
  2396  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2397  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2398  043D  01B4               	clrf	clcd_write@mode
  2399  043E  0AB4               	incf	clcd_write@mode,f
  2400  043F  0839               	movf	clcd_print@str+1,w
  2401  0440  00FF               	movwf	127
  2402  0441  0838               	movf	clcd_print@str,w
  2403  0442  0084               	movwf	4
  2404  0443  120A  118A  2322  120A  118A  	fcall	stringtab
  2405  0448  120A  118A  23B5  120A  118A  	fcall	_clcd_write
  2406                           
  2407                           ;clcd.c: 70: str++;
  2408  044D  3001               	movlw	1
  2409  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2410  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0450  07B8               	addwf	clcd_print@str,f
  2412  0451  1803               	skipnc
  2413  0452  0AB9               	incf	clcd_print@str+1,f
  2414  0453  2C2D               	goto	l1204
  2415  0454                     __end_of_clcd_print:	
  2416                           
  2417                           	psect	text11
  2418  03B5                     __ptext11:	
  2419 ;; *************** function _clcd_write *****************
  2420 ;; Defined at:
  2421 ;;		line 4 in file "clcd.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  byte            1    wreg     unsigned char 
  2424 ;;  mode            1    0[BANK0 ] unsigned char 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  byte            1    3[BANK0 ] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       1       0       0       0
  2437 ;;      Locals:         0       1       0       0       0
  2438 ;;      Temps:          0       2       0       0       0
  2439 ;;      Totals:         0       4       0       0       0
  2440 ;;Total ram usage:        4 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    2
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_init_display_controller
  2447 ;;		_clcd_putch
  2448 ;;		_clcd_print
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _clcd_write
  2454  03B5                     _clcd_write:	
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2458                           ;clcd_write@byte stored from wreg
  2459  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2460  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2461  03B7  00B7               	movwf	clcd_write@byte
  2462                           
  2463                           ;clcd.c: 6: RE2 = mode;
  2464  03B8  1C34               	btfss	clcd_write@mode,0
  2465  03B9  2BBE               	goto	u570
  2466  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2467  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2468  03BC  1509               	bsf	9,2	;volatile
  2469  03BD  2BC1               	goto	l1044
  2470  03BE                     u570:	
  2471  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2472  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2473  03C0  1109               	bcf	9,2	;volatile
  2474  03C1                     l1044:	
  2475                           
  2476                           ;clcd.c: 8: PORTD = byte & 0xF0;
  2477  03C1  0837               	movf	clcd_write@byte,w
  2478  03C2  39F0               	andlw	240
  2479  03C3  0088               	movwf	8	;volatile
  2480                           
  2481                           ;clcd.c: 9: RE1 = 1;
  2482  03C4  1489               	bsf	9,1	;volatile
  2483                           
  2484                           ;clcd.c: 10: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2485  03C5  30A5               	movlw	165
  2486  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2487  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2488  03C8  00B5               	movwf	??_clcd_write
  2489  03C9                     u1237:	
  2490  03C9  0BB5               	decfsz	??_clcd_write,f
  2491  03CA  2BC9               	goto	u1237
  2492  03CB  2BCC               	nop2
  2493                           
  2494                           ;clcd.c: 11: RE1 = 0;
  2495  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2496  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2497  03CE  1089               	bcf	9,1	;volatile
  2498                           
  2499                           ;clcd.c: 13: PORTD = (byte & 0x0F) << 4;
  2500  03CF  0837               	movf	clcd_write@byte,w
  2501  03D0  390F               	andlw	15
  2502  03D1  00B5               	movwf	??_clcd_write
  2503  03D2  3003               	movlw	3
  2504  03D3                     u595:	
  2505  03D3  1003               	clrc
  2506  03D4  0DB5               	rlf	??_clcd_write,f
  2507  03D5  3EFF               	addlw	-1
  2508  03D6  1D03               	skipz
  2509  03D7  2BD3               	goto	u595
  2510  03D8  1003               	clrc
  2511  03D9  0D35               	rlf	??_clcd_write,w
  2512  03DA  0088               	movwf	8	;volatile
  2513                           
  2514                           ;clcd.c: 14: RE1 = 1;
  2515  03DB  1489               	bsf	9,1	;volatile
  2516                           
  2517                           ;clcd.c: 15: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2518  03DC  30A5               	movlw	165
  2519  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2520  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2521  03DF  00B5               	movwf	??_clcd_write
  2522  03E0                     u1247:	
  2523  03E0  0BB5               	decfsz	??_clcd_write,f
  2524  03E1  2BE0               	goto	u1247
  2525  03E2  2BE3               	nop2
  2526                           
  2527                           ;clcd.c: 16: RE1 = 0;
  2528  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2529  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2530  03E5  1089               	bcf	9,1	;volatile
  2531                           
  2532                           ;clcd.c: 18: _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2533  03E6  301B               	movlw	27
  2534  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2535  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2536  03E9  00B6               	movwf	??_clcd_write+1
  2537  03EA  309D               	movlw	157
  2538  03EB  00B5               	movwf	??_clcd_write
  2539  03EC                     u1257:	
  2540  03EC  0BB5               	decfsz	??_clcd_write,f
  2541  03ED  2BEC               	goto	u1257
  2542  03EE  0BB6               	decfsz	??_clcd_write+1,f
  2543  03EF  2BEC               	goto	u1257
  2544  03F0  2BF1               	nop2
  2545  03F1  0008               	return
  2546  03F2                     __end_of_clcd_write:	
  2547                           
  2548                           	psect	text12
  2549  03F2                     __ptext12:	
  2550 ;; *************** function _isr *****************
  2551 ;; Defined at:
  2552 ;;		line 4 in file "isr.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          4       0       0       0       0
  2569 ;;      Totals:         4       0       0       0       0
  2570 ;;Total ram usage:        4 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    1
  2573 ;; This function calls:
  2574 ;;		___awdiv
  2575 ;; This function is called by:
  2576 ;;		Interrupt level 1
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _isr
  2582  03F2                     _isr:	
  2583                           
  2584                           ;isr.c: 6: static unsigned int count = 0;
  2585                           ;isr.c: 8: if (TMR0IF == 1)
  2586  03F2  1D0B               	btfss	11,2	;volatile
  2587  03F3  2C19               	goto	i1l191
  2588                           
  2589                           ;isr.c: 9: {
  2590                           ;isr.c: 11: TMR0 = TMR0 + 6 + 2;
  2591  03F4  0801               	movf	1,w	;volatile
  2592  03F5  3E08               	addlw	8
  2593  03F6  0081               	movwf	1	;volatile
  2594                           
  2595                           ;isr.c: 13: if (++count == (20000/sigma))
  2596  03F7  0833               	movf	_sigma+1,w
  2597  03F8  00F1               	movwf	___awdiv@divisor+1
  2598  03F9  0832               	movf	_sigma,w
  2599  03FA  00F0               	movwf	___awdiv@divisor
  2600  03FB  3020               	movlw	32
  2601  03FC  00F2               	movwf	___awdiv@dividend
  2602  03FD  304E               	movlw	78
  2603  03FE  00F3               	movwf	___awdiv@dividend+1
  2604  03FF  120A  118A  22C9  120A  118A  	fcall	___awdiv
  2605  0404  3001               	movlw	1
  2606  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0407  07A8               	addwf	isr@count,f
  2609  0408  1803               	skipnc
  2610  0409  0AA9               	incf	isr@count+1,f
  2611  040A  3000               	movlw	0
  2612  040B  07A9               	addwf	isr@count+1,f
  2613  040C  0871               	movf	?___awdiv+1,w
  2614  040D  0629               	xorwf	isr@count+1,w
  2615  040E  1D03               	skipz
  2616  040F  2C12               	goto	u112_25
  2617  0410  0870               	movf	?___awdiv,w
  2618  0411  0628               	xorwf	isr@count,w
  2619  0412                     u112_25:	
  2620  0412  1D03               	skipz
  2621  0413  2C18               	goto	i1l1422
  2622                           
  2623                           ;isr.c: 14: {
  2624                           ;isr.c: 15: count = 0;
  2625  0414  01A8               	clrf	isr@count
  2626  0415  01A9               	clrf	isr@count+1
  2627                           
  2628                           ;isr.c: 16: RB7 = !RB7;
  2629  0416  3080               	movlw	128
  2630  0417  0686               	xorwf	6,f
  2631  0418                     i1l1422:	
  2632                           
  2633                           ;isr.c: 17: }
  2634                           ;isr.c: 19: TMR0IF = 0;
  2635  0418  110B               	bcf	11,2	;volatile
  2636  0419                     i1l191:	
  2637  0419  087C               	movf	??_isr+3,w
  2638  041A  00FF               	movwf	127
  2639  041B  087B               	movf	??_isr+2,w
  2640  041C  008A               	movwf	10
  2641  041D  087A               	movf	??_isr+1,w
  2642  041E  0084               	movwf	4
  2643  041F  0E79               	swapf	??_isr^(0+-128),w
  2644  0420  0083               	movwf	3
  2645  0421  0EFE               	swapf	126,f
  2646  0422  0E7E               	swapf	126,w
  2647  0423  0009               	retfie
  2648  0424                     __end_of_isr:	
  2649                           
  2650                           	psect	intentry
  2651  0004                     __pintentry:	
  2652                           ;incstack = 0
  2653                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2654                           
  2655  0004                     interrupt_function:	
  2656  007E                     saved_w	set	btemp
  2657  0004  00FE               	movwf	btemp
  2658  0005  0E03               	swapf	3,w
  2659  0006  00F9               	movwf	??_isr
  2660  0007  0804               	movf	4,w
  2661  0008  00FA               	movwf	??_isr+1
  2662  0009  080A               	movf	10,w
  2663  000A  00FB               	movwf	??_isr+2
  2664  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2665  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2666  000D  087F               	movf	btemp+1,w
  2667  000E  00FC               	movwf	??_isr+3
  2668  000F  120A  118A  2BF2   	ljmp	_isr
  2669                           
  2670                           	psect	text13
  2671  02C9                     __ptext13:	
  2672 ;; *************** function ___awdiv *****************
  2673 ;; Defined at:
  2674 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  divisor         2    0[COMMON] int 
  2677 ;;  dividend        2    2[COMMON] int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  quotient        2    7[COMMON] int 
  2680 ;;  sign            1    6[COMMON] unsigned char 
  2681 ;;  counter         1    5[COMMON] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  2    0[COMMON] int 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         4       0       0       0       0
  2692 ;;      Locals:         4       0       0       0       0
  2693 ;;      Temps:          1       0       0       0       0
  2694 ;;      Totals:         9       0       0       0       0
  2695 ;;Total ram usage:        9 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_isr
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function ___awdiv
  2706  02C9                     ___awdiv:	
  2707                           
  2708                           ;incstack = 0
  2709                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2710  02C9  01F6               	clrf	___awdiv@sign
  2711  02CA  1FF1               	btfss	___awdiv@divisor+1,7
  2712  02CB  2AD3               	goto	i1l1276
  2713  02CC  09F0               	comf	___awdiv@divisor,f
  2714  02CD  09F1               	comf	___awdiv@divisor+1,f
  2715  02CE  0AF0               	incf	___awdiv@divisor,f
  2716  02CF  1903               	skipnz
  2717  02D0  0AF1               	incf	___awdiv@divisor+1,f
  2718  02D1  01F6               	clrf	___awdiv@sign
  2719  02D2  0AF6               	incf	___awdiv@sign,f
  2720  02D3                     i1l1276:	
  2721  02D3  1FF3               	btfss	___awdiv@dividend+1,7
  2722  02D4  2ADE               	goto	i1l1282
  2723  02D5  09F2               	comf	___awdiv@dividend,f
  2724  02D6  09F3               	comf	___awdiv@dividend+1,f
  2725  02D7  0AF2               	incf	___awdiv@dividend,f
  2726  02D8  1903               	skipnz
  2727  02D9  0AF3               	incf	___awdiv@dividend+1,f
  2728  02DA  3001               	movlw	1
  2729  02DB  00F4               	movwf	??___awdiv
  2730  02DC  0874               	movf	??___awdiv,w
  2731  02DD  06F6               	xorwf	___awdiv@sign,f
  2732  02DE                     i1l1282:	
  2733  02DE  01F7               	clrf	___awdiv@quotient
  2734  02DF  01F8               	clrf	___awdiv@quotient+1
  2735  02E0  0870               	movf	___awdiv@divisor,w
  2736  02E1  0471               	iorwf	___awdiv@divisor+1,w
  2737  02E2  1903               	btfsc	3,2
  2738  02E3  2B15               	goto	i1l1304
  2739  02E4  01F5               	clrf	___awdiv@counter
  2740  02E5  0AF5               	incf	___awdiv@counter,f
  2741  02E6                     i1l1292:	
  2742  02E6  1BF1               	btfsc	___awdiv@divisor+1,7
  2743  02E7  2AF4               	goto	i1l1294
  2744  02E8  3001               	movlw	1
  2745  02E9                     u87_25:	
  2746  02E9  1003               	clrc
  2747  02EA  0DF0               	rlf	___awdiv@divisor,f
  2748  02EB  0DF1               	rlf	___awdiv@divisor+1,f
  2749  02EC  3EFF               	addlw	-1
  2750  02ED  1D03               	skipz
  2751  02EE  2AE9               	goto	u87_25
  2752  02EF  3001               	movlw	1
  2753  02F0  00F4               	movwf	??___awdiv
  2754  02F1  0874               	movf	??___awdiv,w
  2755  02F2  07F5               	addwf	___awdiv@counter,f
  2756  02F3  2AE6               	goto	i1l1292
  2757  02F4                     i1l1294:	
  2758  02F4  3001               	movlw	1
  2759  02F5                     u89_25:	
  2760  02F5  1003               	clrc
  2761  02F6  0DF7               	rlf	___awdiv@quotient,f
  2762  02F7  0DF8               	rlf	___awdiv@quotient+1,f
  2763  02F8  3EFF               	addlw	-1
  2764  02F9  1D03               	skipz
  2765  02FA  2AF5               	goto	u89_25
  2766  02FB  0871               	movf	___awdiv@divisor+1,w
  2767  02FC  0273               	subwf	___awdiv@dividend+1,w
  2768  02FD  1D03               	skipz
  2769  02FE  2B01               	goto	u90_25
  2770  02FF  0870               	movf	___awdiv@divisor,w
  2771  0300  0272               	subwf	___awdiv@dividend,w
  2772  0301                     u90_25:	
  2773  0301  1C03               	skipc
  2774  0302  2B0A               	goto	i1l1300
  2775  0303  0870               	movf	___awdiv@divisor,w
  2776  0304  02F2               	subwf	___awdiv@dividend,f
  2777  0305  0871               	movf	___awdiv@divisor+1,w
  2778  0306  1C03               	skipc
  2779  0307  03F3               	decf	___awdiv@dividend+1,f
  2780  0308  02F3               	subwf	___awdiv@dividend+1,f
  2781  0309  1477               	bsf	___awdiv@quotient,0
  2782  030A                     i1l1300:	
  2783  030A  3001               	movlw	1
  2784  030B                     u91_25:	
  2785  030B  1003               	clrc
  2786  030C  0CF1               	rrf	___awdiv@divisor+1,f
  2787  030D  0CF0               	rrf	___awdiv@divisor,f
  2788  030E  3EFF               	addlw	-1
  2789  030F  1D03               	skipz
  2790  0310  2B0B               	goto	u91_25
  2791  0311  3001               	movlw	1
  2792  0312  02F5               	subwf	___awdiv@counter,f
  2793  0313  1D03               	btfss	3,2
  2794  0314  2AF4               	goto	i1l1294
  2795  0315                     i1l1304:	
  2796  0315  0876               	movf	___awdiv@sign,w
  2797  0316  1903               	btfsc	3,2
  2798  0317  2B1D               	goto	i1l1308
  2799  0318  09F7               	comf	___awdiv@quotient,f
  2800  0319  09F8               	comf	___awdiv@quotient+1,f
  2801  031A  0AF7               	incf	___awdiv@quotient,f
  2802  031B  1903               	skipnz
  2803  031C  0AF8               	incf	___awdiv@quotient+1,f
  2804  031D                     i1l1308:	
  2805  031D  0878               	movf	___awdiv@quotient+1,w
  2806  031E  00F1               	movwf	?___awdiv+1
  2807  031F  0877               	movf	___awdiv@quotient,w
  2808  0320  00F0               	movwf	?___awdiv
  2809  0321  0008               	return
  2810  0322                     __end_of___awdiv:	
  2811  007E                     btemp	set	126	;btemp
  2812  007E                     wtemp0	set	126


Data Sizes:
    Strings     70
    Constant    0
    Data        13
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     16      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[15]), STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), 
		 -> STR_2(CODE[17]), STR_1(CODE[14]), main@ptr(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    _main->_clcd_print
    _read_matrix_keypad->_scan_keypad
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    3805
                                              7 BANK0      9     9      0
                         _clcd_print
                         _clcd_putch
                        _init_config
                 _read_matrix_keypad
                     main@clcd_write
 ---------------------------------------------------------------------------------
 (1) main@clcd_write                                       4     3      1     543
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   3     3      0     203
                                              2 BANK0      3     3      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     649
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     649
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     649
                                              4 BANK0      2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     746
                                              4 BANK0      2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    1458
                                              4 BANK0      3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     649
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     406
                                              9 COMMON     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer0
   _read_matrix_keypad
     _scan_keypad
   main@clcd_write

 _isr (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      31       5       61.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jan 24 15:26:28 2022

                               pc 0002                    clcd_print@addr 003A  __size_of_init_display_controller 007F  
                              l93 0086                      ___awdiv@sign 0076                                fsr 0004  
              _init_matrix_keypad 04B1                               l140 01E4                               l137 01E0  
                             l162 0240                               l154 0220                               l146 0200  
                             l155 0228                               l147 0208                               l139 01E8  
                             l164 0244                               l156 0224                               l148 0204  
                             _GIE 005F                               _RB0 0030                               _RB1 0031  
                             _RB2 0032                               _RD0 0040                               _RD1 0041  
                             _RD2 0042                               _RE1 0049                               _RB7 0037  
                             _RD3 0043                               _RE2 004A                               u570 03BE  
                             _PSA 040B                               u770 0381                               u595 03D3  
                             u795 0396                               u975 005A                               _isr 03F2  
                  clcd_putch@addr 0038                               fsr0 0004                    clcd_putch@data 0039  
                             indf 0000               ?_init_matrix_keypad 0070                              l1114 01D0  
                            l1044 03C1                              l1204 042D                              l1134 01F0  
                            l1208 0384                              l1154 0210                              l1322 004A  
                            l1260 046F                              l1316 0038                              l1174 0230  
                            l1192 0248                              l1264 0474                              l1248 0466  
                            l1352 00D5                              l1336 008D                              l1386 0156  
                            l1396 0190                              ?_isr 0070                              STR_1 0352  
                            STR_2 0332                              STR_3 0370                              STR_4 0368  
                            STR_5 0360                              STR_6 0343                       main@attempt 002A  
                            _T0CS 040D                              u1005 009A                              u1035 00E0  
                            u1053 0145                              u1207 02A2                              u1217 02B4  
                            u1137 038C                              u1227 02C5                              u1147 03A3  
                            u1237 03C9                              u1157 03AF                              u1247 03E0  
                            u1167 0250                              u1257 03EC                              u1177 0264  
                            u1187 0276                              u1197 0292                       main@cur_key 003C  
                            _TMR0 0001                              _main 002D                              btemp 007E  
                            start 0012              ??_init_matrix_keypad 0034                    clcd_write@byte 0037  
                  clcd_write@mode 0034                             ??_isr 0079                             ?_main 0070  
                 __end_of___awdiv 0322                     __CFG_WDTE$OFF 0000                   ___awdiv@divisor 0070  
                           i1l191 0419                      ?_init_config 0070                   ___awdiv@counter 0075  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             u90_25 0301                             u91_25 030B  
                           u87_25 02E9                             u89_25 02F5                      ?_init_timer0 0070  
         __size_ofmain@clcd_write 003D                             _nRBPU 040F                _read_matrix_keypad 0454  
                           _sigma 0032                             main@i 003F                             pclath 000A  
             ?_read_matrix_keypad 0070                             status 0003                             wtemp0 007E  
                    ?_scan_keypad 0070                   __initialization 0015                      __end_of_main 01C6  
            ??_read_matrix_keypad 0036                            ??_main 003B                  ___awdiv@dividend 0072  
                          i1l1300 030A                            i1l1304 0315                            i1l1308 031D  
                          i1l1422 0418                            i1l1282 02DE                            i1l1292 02E6  
                          i1l1276 02D3                            u112_25 0412                            i1l1294 02F4  
                          _TMR0IE 005D                            _TMR0IF 005A                            _TRISE1 0449  
                          _TRISB7 0437                            _TRISE2 044A           _init_display_controller 024A  
                       ??___awdiv 0074                  ___awdiv@quotient 0077                            saved_w 007E  
         __end_of__initialization 0029                    __pcstackCOMMON 0070                      __pidataBANK0 04C1  
                  main@clcd_write 0378              __size_of_init_config 0017              __size_of_init_timer0 0009  
                      __pbssBANK0 0020                __size_of_init_clcd 0009         ??_init_display_controller 0038  
                      _clcd_print 0424                        _clcd_putch 048D                        _clcd_write 03B5  
            __size_of_scan_keypad 0084                        __pmaintext 002D                        __pintentry 0004  
          __end_ofmain@clcd_write 03B5                        __stringtab 0322       __size_of_init_matrix_keypad 0010  
                         ___awdiv 02C9                           __ptext1 0378                           __ptext2 0454  
                         __ptext3 01C6                           __ptext4 0476                           __ptext5 04CE  
                         __ptext6 04B1                           __ptext7 04D7                           __ptext8 024A  
                         __ptext9 048D                   ?main@clcd_write 0034   __end_of_init_display_controller 02C9  
               __end_of_init_clcd 04E0                      __size_of_isr 0032                           main@arr 0044  
                         main@key 0043                           clrloop0 04E1                           main@pwd 0020  
                         main@ptr 003D              end_of_initialization 0029               main@clcd_write@byte 0037  
             main@clcd_write@mode 0034                       ?_clcd_print 0038                       ?_clcd_putch 0038  
                     ?_clcd_write 0034       __size_of_read_matrix_keypad 0022                     clcd_print@str 0038  
                      main@count1 002C               start_initialization 0015               __size_of_clcd_print 0030  
                    scan_keypad@i 0034               __size_of_clcd_putch 0013               __size_of_clcd_write 003D  
          read_matrix_keypad@mode 0037            read_matrix_keypad@once 0050                       __end_of_isr 0424  
                      init_fetch0 04A0                       __pdataBANK0 0044                     ??_init_config 003A  
                   ??_init_timer0 0034                         ___latbits 0002                     __pcstackBANK0 0034  
                   ??_scan_keypad 0034                          ?___awdiv 0070                  ??main@clcd_write 0035  
                       __pstrings 0322                         _init_clcd 04D7               __end_of_init_config 048D  
             __end_of_init_timer0 04D7          ?_init_display_controller 0070                 interrupt_function 0004  
                       clear_ram0 04E0                      ??_clcd_print 003B                      ??_clcd_putch 0039  
      __end_of_init_matrix_keypad 04C1                      ??_clcd_write 0035                         main@F1130 004C  
             __end_of_scan_keypad 024A                       __stringbase 0331                         main@flag1 0030  
                       main@count 002E                __end_of_clcd_print 0454                __end_of_clcd_putch 04A0  
              __end_of_clcd_write 03F2                        ?_init_clcd 0070             read_matrix_keypad@key 0038  
      __end_of_read_matrix_keypad 0476                  __size_of___awdiv 0059                __end_of__stringtab 0332  
                     _init_config 0476                       _init_timer0 04CE                          __ptext10 0424  
                        __ptext11 03B5                          __ptext12 03F2                          __ptext13 02C9  
                   __size_of_main 0199                       _scan_keypad 01C6                          main@once 004E  
                        isr@count 0028                          init_ram0 04A4                       ??_init_clcd 003A  
                        intlevel1 0000                         stringcode 032C                          stringdir 032C  
                        stringtab 0322  
